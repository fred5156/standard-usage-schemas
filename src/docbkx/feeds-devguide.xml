<?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE book[
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
]>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" 
    xml:id="feeds-devguide" version="5.0">
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Rackspace Cloud Feeds™ Developer Guide</title>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2014/2015</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1.0</releaseinfo>
        <productname>Rackspace Cloud Feeds™</productname>
        <pubdate/>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the
                    template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers
                interested in developing applications using the
                Rackspace Cloud Feeds Application Programming
                Interface (<abbrev>API</abbrev>). </para>
        </abstract>
        <revhistory>
            <revision security="internal">
                <date>2015-04-28</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added content about Cloud Feeds archiving and how to configure archiving preferences.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-10-01</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Published the initial internal
                                release of the Cloud Feeds API
                                Guide.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>API Developer Guide</raxm:displayname>
            <raxm:product version="v1.0">cloud-feeds</raxm:product>
            <raxm:priority>20</raxm:priority>
        </raxm:metadata>
    </info>
    <chapter xml:id="overview">
        <title>Overview</title>
        <para>Rackspace Cloud Feeds™ enables customers on the public cloud to access near real-time
            usage and system events that can be used for analysis, monitoring, and automation. The
            purpose of this document is explain how to access feeds by using the Rackspace Cloud
            Feeds API. Cloud Feeds uses the following technologies:</para>
        <itemizedlist spacing="compact">
            <listitem>
                <para>Atom Hopper (for more information, see <link xlink:href="http://atomhopper.org">Atom Hopper </link>)</para>
            </listitem>
            <listitem>
                <para>Apache Abdera (for more information, see <link xlink:href="http://abdera.apache.org">Apache Abdera</link>)</para>
            </listitem>
            <listitem>
                <para>The Atom Publishing Protocol, RFC 5023 (for more information, see <link xlink:href="http://www.ietf.org/rfc/rfc5023.txt">RFC 5023</link>)</para>
            </listitem>
            <listitem>
                <para>Feed Paging and Archiving, RFC 5005 (for more information, see<link xlink:href="http://www.ietf.org/rfc/rfc5005.txt">RC 5005</link> )</para>
            </listitem>
            <listitem>
                <para>RESTful web services (for more information, see <link xlink:href="http://en.wikipedia.org/wiki/Representational_state_transfer">RESTful web services</link>)</para>
            </listitem>
            <listitem>
                <para>HTTP/1.1 protocol (for more information, see <link xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">HTTP/1.1
                        protocol</link>)</para>
            </listitem>
            <listitem>
                <para>JSON and XML data serialization formats (for more information, see <link xlink:href="http://docs.dhtmlx.com/gantt/desktop__serialization.html">JSON
                        and XML</link>)</para>
            </listitem>
            <listitem>
                <para>Atom Syndication Format, RFC 4287 (for more information, see <link xlink:href="http://www.rfc-base.org/rfc-4287.html">JRFC 4287</link></para>
            </listitem>
        </itemizedlist>
        <section xml:id="Document_Change_History">
            <title>Document change history</title>
            <para>This version of the guide replaces and obsoletes all previous versions. The most
                recent changes are described in the following table:</para>
            <?rax revhistory?>
        </section>
        <section xml:id="Additional_Resources">
            <title>Additional resources</title>
            <para>For information about getting started with the API, see the <citetitle>Cloud Feeds
                    Getting Started Guide</citetitle> at <link xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>. The
                getting started guide contains a subset of the information that is provided in the
                Developer guide. All you need to start using Cloud Feeds is the getting started
                guide, the developer guide, your Rackspace Cloud account, and at least one cloud
                server.</para>
            <para>Visit the <link xlink:href="http://feedback.rackspacecloud.com/forums/71021-product-feedback/category/42449-cloud-databases">Product Feedback Forum</link> to tell us what you think about Cloud
                Feeds.</para>
            <para>You can also follow Rackspace updates and announcements via Twitter at <link xlink:href="http://www.twitter.com/rackspace">http://www.twitter.com/rackspace</link>. </para>
            <para>This API uses standard HTTP/1.1 response codes as documented at <link xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>. </para>
        </section>
        <section xml:id="Early_Access" security="external"><title>Early Access Program</title><para>Cloud Feeds is currently available through the Cloud Feeds Early Access program. Use of Cloud
                Feeds is subject to the Test Terms located at <link
                    xlink:href="http://www.rackspace.com/information/legal/cloud/tos "
                    >http://www.rackspace.com/information/legal/cloud/tos</link>.</para></section>
        <section xml:id="Pricing_SLA-d1e1362">
            <title>Pricing and service level</title>
            <para>Pricing and service level agreement (SLA) information for Cloud Feeds is as
                follows:</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="bold">Pricing</emphasis>: Currently, Cloud Feeds is
                        available at no cost for Rackspace service administrators who are using the
                        public cloud. </para>
                </listitem>
            </itemizedlist>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="bold">SLA</emphasis>: The Cloud Feeds SLA is for
                        publishers and subscribers. The SLA provides a support model that uses Nova
                        as the first product to send events through Cloud Feeds. For detailed
                        information about the number of requests that can be made per role, see
                            <link linkend="Rate_limits_per_role">Rate limits</link>.</para>
                </listitem>
            </itemizedlist>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="bold">Uptime</emphasis>: The uptime goal for Cloud Feeds
                        is 99.999 percent. If Cloud Feeds is down, all publishers must continue to
                        hold their events until Cloud Feeds is back up. Publishers must queue events
                        for a minimum of two days.</para>
                </listitem>
            </itemizedlist>
           
        </section>
    </chapter>
     <chapter xml:id="General_API_Information-d1e633">
        <title>General API information</title>
        <para>The Cloud Feeds API is implemented using a RESTful web service interface. Like other
            products in the Rackspace Cloud suite, the Cloud Feeds service shares a common
            token-based authentication system that enables seamless access among products and
            services. </para>
        <note>
            <para> All requests to authenticate against and operate the service are performed by
                using SSL over HTTP (HTTPS) on TCP port 443. </para>
        </note>
        <section xml:id="Authentication-d1e647">
            <title>Authentication</title>
            <para>Cloud Feeds provides two methods to authenticate users who want to use the Cloud
                Feeds API:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Authentication by using an authentication token. For more information,
                            see <link linkend="Token_based_authentication">Authenticating by using
                                token-based authentication</link>.</para>
                    </listitem>
                    <listitem>
                        <para>Basic Authentication by using a username and API key. For more
                            information, see <link linkend="Basic_Authentication">Authenticating by
                                using basic authentication</link>.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <note>
                    <para>The examples in this guide on how to use the Cloud Feeds API use
                        token-based authentication.</para>
                </note>
            </para>
            <section xml:id="AuthRoles-d1e699">
                <title>Authorization roles required for Cloud Feeds access</title>
                <para security="external">To read Cloud Feeds data for a single tenant
                        (<command>GET</command> operations), a user must be assigned the <emphasis
                        role="italic">cloudfeeds:observer role</emphasis>.</para>    
    <para security="internal">The following table lists the authorization roles that are required
                    for Cloud Feeds access for internal customers.</para>
                    <table frame="all" security="internal">
                        <title>Roles</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1*"/>
                            <colspec colname="c2" colnum="2" colwidth="2.57*"/>
                            <thead>
                                <row>
                                    <entry>Role name</entry>
                                    <entry>Access</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><emphasis role="italic">admin</emphasis></entry>
                                    <entry>Able to read Cloud Feeds data for a single tenant
                                        (<command>GET</command>).</entry>
                                </row>
                            <row>
                                <entry><emphasis role="italic">observer</emphasis></entry>
                                <entry>Able to read Cloud Feeds data for a single tenant
                                        (<command>GET</command>).</entry>
                            </row>
                            <row>
                                <entry><emphasis role="italic">cloudfeeds:observer</emphasis>
                                </entry>
                                <entry>Able to read Cloud Feeds data for a single tenant
                                        (<command>GET</command>).</entry>
                            </row>
                            <row>
                                <entry><emphasis role="italic"
                                    >identity:user-admin</emphasis></entry>
                                <entry>Able to read Cloud Feeds data for a single tenant
                                        (<command>GET</command>).</entry>
                            </row>
                                <row>
                                    <entry><emphasis role="italic"
                                        >cloudfeeds:service-admin</emphasis></entry>
                                    <entry>Able to read and write Cloud Feeds data for all tenants
                                        (<command>GET</command>/<command>POST</command>).</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                
            </section>
            <section xml:id="RBAC-Permissions-Cross-Ref-d1e001" version="5.0" xmlns:wadl="http://wadl.dev.java.net/2009/02">
                <title>RBAC permissions cross-reference to Cloud Feeds API operations</title>
                <para>Role Based Access Control (RBAC) restricts access to the capabilities of
                    Rackspace Cloud services, including the Cloud Feeds API, to authorized users
                    only. RBAC enables Rackspace Cloud customers to specify which account users of
                    their Cloud account have access to which Cloud Feeds API service capabilities,
                    based on roles defined by Rackspace.</para>
                <para>The following table shows the RBAC role matrix for Cloud Feeds:</para>
                <para>
                    <table frame="border">
                        <caption>RBAC Role Matrix</caption>
                        <col width="40%"/>
                        <col width="30%"/>
                        <col width="30%"/>
                        <thead>
                            <tr>
                                <th/>
                                <th colspan="2" align="center">Method</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><emphasis role="bold">Role</emphasis></td>
                                <td><command>GET</command></td>
                                <td><command>POST</command></td>
                            </tr>
                            <tr>
                                <td><emphasis role="italic">admin</emphasis></td>
                                <td>YES</td>
                                <td>NO</td>
                            </tr>
                            <tr>
                                <td><emphasis role="italic">identity:user-admin</emphasis></td>
                                <td>YES</td>
                                <td>NO</td>
                            </tr>
                            <tr>
                                <td><emphasis role="italic">observer</emphasis></td>
                                <td>YES</td>
                                <td>NO</td>
                            </tr>
                            <tr>
                                <td><emphasis role="italic">cloudfeeds:observer</emphasis></td>
                                <td>YES</td>
                                <td>NO</td>
                            </tr>
                            <tr>
                                <td><emphasis role="italic">cloudfeeds:service-admin</emphasis></td>
                                <td>YES</td>
                                <td>YES</td>
                            </tr>
                            <tr>
                                <td>any other roles</td>
                                <td>NO</td>
                                <td>NO</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <para>For more information about RBAC, read the <link xlink:href="http://www.rackspace.com/knowledge_center/article/detailed-permissions-matrix-for-cloud-feeds">Detailed Permissions Matrix for Cloud Feeds</link> and <link xlink:href="http://www.rackspace.com/knowledge_center/article/permissions-matrix-for-role-based-access-control-rbac">Permission Matrix for Role-Based Access Control</link> articles on the
                    Rackspace Knowledge Center.</para>
            </section>
            <section xml:id="Rate_limits_per_role">
                <title>Rate limits <?sbr?><?sbr?><?sbr?></title>
                <para security="internal">Cloud Feeds limits the amount of requests that can be made within a specific
                    time frame per role. </para>
                <para security="internal">The following table lists the number of transactions per role and feed
                    type.</para>
                <para security="internal">
                    <table frame="border">
                        <caption>Transactions per role</caption>
                        <col width="33%"/>
                        <col width="33%"/>
                        <col width="33%"/>
                        <thead>
                            <tr>
                                <th>Role</th>
                                <th>Feed type</th>
                                <th>Number of transactions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>cloudfeeds:observer</td>
                                <td>All feeds</td>
                                <td>10 per minute (<command>GET</command> requests)</td>
                            </tr>
                            <tr>
                                <td>cloudfeeds: service-admin</td>
                                <td>Files feed</td>
                                <td>300 per second (<command>POST</command> requests)</td>
                            </tr>
                            <tr>
                                <td>cloudfeeds: service-admin</td>
                                <td>Sites feed</td>
                                <td>675 per second (<command>POST</command> requests)</td>
                            </tr>
                            <tr>
                                <td>cloudfeeds: service-admin</td>
                                <td>All other feeds (except for Files and Sites)</td>
                                <td>200 per second(<command>POST</command> requests)</td>
                            </tr>
                            <tr>
                                <td>cloudfeeds: service-admin</td>
                                <td>All feeds</td>
                                <td>350 per second (<command>GET</command> requests)</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <para security="external">Customers with the cloudfeeds:observer role can perform 10
                        <command>GET</command> requests per minutes on all feeds they are authorized
                    for.</para>
            </section>
            <section xml:id="Token_based_authentication" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">
                <title>Authenticating by using token-based authentication</title>
                    <para>To make calls against the Cloud Feeds API by using an authentication
                        token, you must first generate an authentication token. You provide this
                        token in the X-Auth-Token header in each Cloud Feeds API request. </para>
                    <para>The examples below demonstrate how to use cURL to obtain the
                        authentication token and your account number. You must provide both when
                        making subsequent Cloud Feeds API requests when you use token-based
                        authentication.</para>
                    <para>Remember to replace the placeholder names in the following authentication
                        request examples with your information:<itemizedlist spacing="compact">
                            <listitem>
                                <para security="external"><emphasis role="italic"
                                        >yourUserName</emphasis> &mdash; Your common Rackspace Cloud
                                    username, as supplied during registration.</para>
                                <para security="internal"><emphasis role="italic"
                                        >yourUserName</emphasis> &mdash; Your common Cloud username
                                    as supplied to you.</para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="italic">yourApiKey</emphasis> &mdash; Your API
                                    access key.</para>
                                <para security="external"> You can obtain the key from the Rackspace
                                        <link xlink:href="http://mycloud.rackspace.com/">Cloud
                                        Control Panel</link>) by accessing selecting <emphasis
                                        role="bold">Account Settings</emphasis> from the <emphasis
                                        role="italic">yourAccount</emphasis> menu in the top-right
                                    corner of the window.</para>
                            </listitem>
                        </itemizedlist></para>
                    <para security="internal">You can use either of the following endpoints to
                        access the authentication service, depending whether you use a staging or a
                        production environment: </para>
                    <itemizedlist spacing="compact" security="internal">
                        <listitem>
                            <para>https://staging.identity.api.rackspacecloud.com/v2.0/</para>
                        </listitem>
                        <listitem>
                            <para>https://identity-internal.api.rackspacecloud.com/v2.0/</para>
                        </listitem>
                    </itemizedlist>
                    <para security="external"> You can use the following endpoint to access the
                        Authentication Service: </para>
                    <itemizedlist spacing="compact" security="external">
                        <listitem>
                            <para><link xlink:href="&ENDPOINT-US-20;">&ENDPOINT-US-20;</link></para>
                        </listitem>
                    </itemizedlist>
                    <para security="external">Notice that you authenticate by using a special URL
                        for the Cloud authentication service. For example, you may use
                            <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code> as
                        shown in the following Authenticate Request examples. Note that the
                            <code>v2.0</code> component in the URL indicates that you are using
                        version 2.0 of the Cloud Authentication API.</para>
                    <para security="internal">Notice that you authenticate by using a special URL
                        for the Cloud authentication service. For example, you may use
                            <code>https://staging.identity.api.rackspacecloud.com/v2.0/tokens</code>
                        or <code>https://identity-internal.api.rackspacecloud.com/v2.0/tokens</code>
                        as shown in the following Authenticate Request examples. Note that the
                            <code>v2.0</code> component in the URL indicates that you are using
                        version 2.0 of the Cloud Authentication API.</para>
                    <example security="external">
                        <title>cURL authenticate request: XML</title>
                        <?dbfo keep-together="always"?>
                        <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;auth>
   &lt;apiKeyCredentials
      xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
         username="<replaceable>yourUserName</replaceable>"
         apiKey="<replaceable>yourApiKey"</replaceable>/>
&lt;/auth>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri></screen>
                    </example>
                    <example security="internal">
                        <title>cURL authenticate request: XML</title>
                        <?dbfo keep-together="always"?>
                        <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;auth>
   &lt;apiKeyCredentials
      xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
         username="<replaceable>yourUserName</replaceable>"
         apiKey="<replaceable>yourApiKey"</replaceable>/>
&lt;/auth>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://staging.identity.api.rackspacecloud.com/v2.0/tokens'</uri></screen>
                    </example>
                    <example security="external">
                        <title>cURL authenticate request: JSON</title>
                        <?dbfo keep-together="always"?>
                        <screen language="bash">curl -s https://identity.api.rackspacecloud.com/v2.0/tokens -X 'POST' \
     -d '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"<replaceable>yourUserName</replaceable>",
        "apiKey":"<replaceable>yourApiKey</replaceable>"}}}' \ 
     -H "Content-Type:
        application/json" </screen>
                    </example>
                    <example security="internal">
                        <title>cURL authenticate request: JSON</title>
                        <?dbfo keep-together="always"?>
                        <screen language="bash">curl -s https://staging.identity.api.rackspacecloud.com/v2.0/tokens -X 'POST' \
     -d '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"<replaceable>yourUserName</replaceable>",
        "apiKey":"<replaceable>yourApiKey</replaceable>"}}}' \ 
     <emphasis role="bold">-H "Content-Type:
        application/json" </emphasis></screen>
                    </example>
                    <para>The authentication token <code>id</code> is returned along with an
                            <code>expires</code> attribute that specifies when the token expires. </para>
                    <note>
                        <itemizedlist spacing="compact">
                            <listitem>
                                <para>If the authentication response returns a 401 response with a
                                    request for additional credentials, your account requires
                                    multi-factor authentication. To complete the authentication
                                    process, submit a second POST token request with these
                                    multi-factor authentication credentials: <itemizedlist>
                                        <listitem>
                                            <para>The session ID value returned in the
                                                  <code>WWW-Authenticate: OS-MF sessionId</code>
                                                header parameter included in the response to the
                                                initial authentication request.</para>
                                        </listitem>
                                        <listitem>
                                            <para>The passcode from the mobile phone associated with
                                                your user account.</para>
                                            <example>
                                                <title>Authentication request with multi-factor
                                                  authentication credentials</title>
                                                <programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt>curl https://identity.api.rackspacecloud.com/v2.0/tokens \
       -X POST \
       -d '{"auth": {"RAX-AUTH:passcodeCredentials": {"passcode":"1411594"}}}'\
       -H "X-SessionId: $SESSION_ID" \
       -H "Content-Type: application/json" --verbose | python -m json.tool</programlisting>
                                            </example>
                                        </listitem>
                                    </itemizedlist></para>
                                <para>For more information, see <link
                                        xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/MFA_Ops.html"
                                        >Multi-factor authentication</link> in the
                                        <citetitle>Rackspace Cloud Identity Client Developer
                                        Guide</citetitle>.</para>
                            </listitem>
                            <listitem>
                                <para>The token, user, and service catalog information that you
                                    receive in your responses vary from the examples shown in this
                                    document because they are specific to your account.</para>
                            </listitem>
                            <listitem>
                                <para> The <code>expires</code> attribute denotes the time after
                                    which the token will automatically expire. A token may be
                                    manually revoked before the time identified by the expires
                                    attribute; <code>expires</code> predicts a token's maximum
                                    possible lifespan but does not guarantee that it will reach that
                                    lifespan. Clients are encouraged to cache a token until it
                                    expires.</para>
                            </listitem>
                            <listitem>
                                <para>Applications should be designed to re-authenticate after
                                    receiving a 401 (Unauthorized) response from a service
                                    endpoint.</para>
                            </listitem>
                            <listitem security="internal">
                                <para>For more detailed authentication instructions, see the <link
                                        xlink:href="http://docs-internal.rackspace.com/auth/api/v2.0/auth-client-devguide/content/QuickStart-000.html"
                                        > Quick Start</link> in the <citetitle>Identity Client
                                        Developer Guide</citetitle>.</para>
                            </listitem>
                            <listitem security="external">
                                <para>For more detailed authentication instructions and examples,
                                    see the <link
                                        xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/QuickStart-000.html"
                                        >Quick Start</link> in the <citetitle>Identity Client
                                        Developer Guide</citetitle>.</para>
                            </listitem>
                        </itemizedlist>
                    </note>
                    <para>The actual account number is located after the final slash (/) in the
                        <code>publicURL</code> field. You must specify your account number on most
                    of the Cloud Feeds API operations, wherever you see the placeholder
                        <replaceable>tenantID</replaceable> specified in the examples in this guide.
                    A successful authentication request returns the authentication token, as well as
                    the Identity Service catalog in the response. </para></section>
                <section xml:id="Basic_Authentication">
                    <title>Authenticating by using basic authentication</title>
                    <para>In addition to token-based authentication Cloud Feeds also
                        supports basic authentication by using your Rackspace cloud account username
                        and API key.</para>
                <para security="internal">
                    <important>
                        <para>Basic authentcation cannot be used for making requests against the
                                <link linkend="Preferences_API">Archiving Configuration
                            API.</link>.</para>
                    </important>
                </para>
                    <para>To make a request to the Cloud Feeds API with basic
                        authentication, you need to issue a cURL call directly against the requested
                        end point by providing the username and API key directly in the call as
                        shown here:</para>
                    <para><programlisting>curl -u &lt;<replaceable>username</replaceable>:<replaceable>api-key</replaceable>> -X &lt;<replaceable>method</replaceable>> https://<replaceable>endpointURL</replaceable>/</programlisting>The
                        following example shows how to retrieve the feeds catalog by using basic
                        authentication:</para>
                    <para>
                        <programlisting>curl -u username:user_api_key –X GET https://atom.test.ord1.us.ci.rackspace.net/ </programlisting>
                    </para>
                    <para>The following example show how to retrieve an event by using
                        basic authentication:</para>
                    <para>
                        <programlisting>curl -u username:user_api_key –X GET https://atom.test.ord1.us.ci.rackspace.net/usagesummary/bigdata/events</programlisting>
                    </para>
                </section>                
            </section>
        <section xml:id="Service_Access_Endpoints-d1e753">
            <title>Identity Service access/endpoints</title>
            <para xmlns:svg="http://www.w3.org/2000/svg"
                xmlns:m="http://www.w3.org/1998/Math/MathML"
                xmlns:html="http://www.w3.org/1999/xhtml">The Identity Service catalog contains a
                list of product endpoints the user can access. It includes a list of Cloud Feeds
                endpoints in various regions. </para>
            <para xmlns:svg="http://www.w3.org/2000/svg"
                xmlns:m="http://www.w3.org/1998/Math/MathML"
                xmlns:html="http://www.w3.org/1999/xhtml">The user can use the Cloud Feeds endpoint
                in a specific region to interact with each individual feed. The user of the service
                is responsible for appropriate replication, caching, and overall maintenance of
                Cloud Feeds data across regional boundaries to other Cloud Feeds servers. </para>
            <para>
                <note>
                    <para>The Identity Service catalog contains a link to the Cloud Feeds service
                        catalog. The Cloud Feeds service catalog lists all available feeds.</para>
                </note>
            </para>
            <para>The following table shows the regionalized service endpoints for Cloud
                Feeds.</para>
            <table frame="border" security="external">
                <caption>Regionalized service endpoints</caption>
                <col width="11%"/>
                <col width="11%"/>
                <col width="16%"/>
                <col width="16%"/>
                <col width="16%"/>
                <col width="16%"/>
                <col width="16%"/>
                <thead>
                    <tr align="center">
                        <td colspan="2">Region</td>
                        <td colspan="5">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="2">Chicago (ORD)</td>
                        <td colspan="5"><code>https://ord.feeds.api.rackspacecloud.com/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">Dallas/Ft. Worth (DFW)</td>
                        <td colspan="5"><code>https://dfw.feeds.api.rackspacecloud.com/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">Northern Virginia</td>
                        <td colspan="5"><code>https://iad.feeds.api.rackspacecloud.com/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">London (LON)</td>
                        <td colspan="5"><code>https://lon.feeds.api.rackspacecloud.com/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">Sydney (SYD)</td>
                        <td colspan="5">
                            <code>https://syd.feeds.api.rackspacecloud.com/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">Hong Kong (HKG)</td>
                        <td colspan="5">
                            <code>https://hkg.feeds.api.rackspacecloud.com/</code></td>
                    </tr>
                </tbody>
            </table>
            <note>
                <itemizedlist>
                    <listitem>
                        <para>Choose the endpoint for the data center where your cloud resources are
                            located.</para>
                    </listitem>
                    <listitem>
                        <para>The cloud server that you use must be located in the same data center
                            where your database resides.</para>
                    </listitem>
                    <listitem>
                        <para>All examples in this guide assume that you are operating against the
                            DFW data center. If you are using a different datacenter, be sure to use
                            the associated endpoint from the table instead.</para>
                    </listitem>
                    <listitem>
                        <para>The endpoints provided in this sections are the base URL for accessing
                            Cloud Feeds. To access actual feeds, you need to provide additional
                            information.</para>
                    </listitem>
                </itemizedlist>
            </note>
            <para security="internal">The following table summarizes the endpoints for a staging
                environment to use for your Cloud Feeds API calls. </para>
            <para>
                <table security="internal" frame="border">
                    <caption>Staging service endpoints </caption>
                    <thead>
                        <tr align="center">
                            <td colspan="2">Region</td>
                            <td colspan="5">Endpoint</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="2">US</td>
                            <td colspan="5"><code>https://atom.staging.ord1.us.ci.rackspace.net</code>
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">UK</td>
                            <td colspan="5"><code>https://atom.staging.ord1.uk.ci.rackspace.net</code></td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para security="internal">The following table summarizes the endpoints for a production
                enviroment for your Cloud Feeds API calls. </para>
            <para>
                <table security="internal" frame="border">
                    <caption>Production service endpoints </caption>
                    <thead>
                        <tr align="center">
                            <td colspan="2">Region</td>
                            <td colspan="5">Endpoint</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="2">Chicago (ORD)</td>
                            <td colspan="5"><code>https://atom.prod.ord1.us.ci.rackspace.net</code></td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Dallas/Ft. Worth (DFW)</td>
                            <td colspan="5"><code>https://atom.prod.dfw1.us.ci.rackspace.net</code></td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Northern Virginia IAD)</td>
                            <td colspan="5"><code>https://atom.prod.iad3.us.ci.rackspace.net</code></td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">London (LON)</td>
                            <td colspan="5"><code>https://atom.prod.lon3.uk.ci.rackspace.net</code></td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Sydney (SYD)</td>
                            <td colspan="5"><code>https://atom.prod.syd2.us.ci.rackspace.net</code></td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Hong Kong (HKG)</td>
                            <td colspan="5"><code>https://atom.prod.hkg1.us.ci.rackspace.net</code></td>
                        </tr>
                    </tbody>
                </table>
            </para>
        </section>
        <section xml:id="Feeds_Catalog">
            <title>Feeds catalog</title>
            <para>You can obtain a list of all the feeds that are available by submitting a
                    <command>GET</command> request against the Cloud Feeds endpoint as shown in the
                following examples:</para>
            <example security="internal">
                <title>Retrieve feeds catalog request - XML example</title>
                <programlisting>curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://<replaceable>endpointURL</replaceable>/</programlisting>
            </example>
            <example security="external">
                <title>Retrieve feeds catalog request - XML example</title>
                <programlisting security="external">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://<replaceable>endpointURL</replaceable>/<replaceable>tenantID</replaceable>/</programlisting>
            </example>
            <example security="internal">
                <title>Retrieve feeds catalog request - JSON example</title>
                <programlisting>curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -H "Accept: application/vnd.rackspace.atomsvc+json" -X GET https://<replaceable>endpointURL</replaceable>/</programlisting>
            </example>
            <example security="external">
                <title>Retrieve feeds catalog request - JSON example</title>
                <programlisting security="external">curl –H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -H "Accept: application/vnd.rackspace.atomsvc+json" -X GET https://<replaceable>endpointURL</replaceable>/<replaceable>tenantID</replaceable>/</programlisting>
            </example>
            <para>You can also use <emphasis role="bold">basic authentication</emphasis> to retrieve
                a catalog feed by using the following syntax:</para>
            <example security="internal">
                <title>Retrieve feeds catalog request using basic authentication- XML
                    example</title>
                <programlisting>curl -u <replaceable>username</replaceable>:<replaceable>api_key</replaceable> -X GET https://<replaceable>endpointURL</replaceable>/</programlisting>
            </example>
            <example security="external">
                <title>Retrieve feeds catalog request using basic authentication - XML
                    example</title>
                <programlisting security="external">curl -u <replaceable>username</replaceable>:<replaceable>api_key</replaceable> -X GET https://<replaceable>endpointURL</replaceable>/<replaceable>tenantID</replaceable>/</programlisting>
            </example>
            <example security="internal">
                <title>Retrieve feeds catalog request using basic authentication - JSON
                    example</title>
                <programlisting>curl -u <replaceable>username</replaceable>:<replaceable>api_key</replaceable> -H "Accept: application/vnd.rackspace.atomsvc+json" -X GET https://<replaceable>endpointURL</replaceable>/</programlisting>
            </example>
            <example security="external">
                <title>Retrieve feeds catalog request using basic authentication - JSON
                    example</title>
                <programlisting security="external">curl -u <replaceable>username</replaceable>:<replaceable>api_key</replaceable>  -H "Accept: application/vnd.rackspace.atomsvc+json" -X GET https://<replaceable>endpointURL</replaceable>/<replaceable>tenantID</replaceable>/</programlisting>
            </example>
            <para>This operation returns a list of supported feeds as shown in the following
                examples:</para>
            <example security="internal"><title>Retrieve feeds catalog response - XML example</title><programlisting language="xml"><xi:include href="./samples/resGetCatalogFeed.xml" parse="text"/></programlisting></example>
            <example security="external"><title>Retrieve feeds catalog response - XML example</title><programlisting language="xml"><xi:include href="./samples/resGetCatalogFeedext.xml" parse="text"/></programlisting></example>
            <example security="internal"><title>Retrieve feeds catalog response - JSON example</title><programlisting language="json"><xi:include href="./samples/resGetCatalogFeed.json" parse="text"/></programlisting></example>
            <example security="external"><title>Retrieve feeds catalog response - JSON example</title><programlisting language="json"><xi:include href="./samples/resGetCatalogFeedext.json" parse="text"/></programlisting></example>
        </section>
        <section xml:id="CloudFeedsConcepts">
            <title>Cloud Feeds concepts</title>
            <para>Cloud Feeds uses AtomPub to publish different types of feeds. Feeds are composed
                of a number of items called <emphasis role="italic">entries</emphasis>. Each entry
                has an extensible set of attached metadata. </para>
            <para>AtomPub together with the Atom Syndication Format (ASF) provides a format for
                implementing web feeds. Web feeds provide users with frequently updated content.
                AtomPub is based on an HTTP transfer of Atom-formatted representations. The Atom
                format is documented in the Atom Syndication Format.</para>
            <para>Cloud Feeds is an open-source AtomPub server for accessing, processing, and
                aggregating Atom entries. Cloud Feeds was designed to make it easy to build both
                generalized and specialized persistence mechanisms for Atom XML data, based on the
                Atom Syndication Format and the Atom Publishing Protocol.</para>
            <para>Cloud Feeds works the following way:</para>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Events are generated by a publisher and added to the database as
                            entries. Events can be usage events, system events or billing
                            events.</para>
                    </listitem>
                    <listitem>
                        <para>Entries exist in Cloud Feeds for three days. After that time period
                            they are deleted.</para>
                    </listitem>
                </orderedlist>
            </para>
            <para>To read the official documentation for the Atom Syndication Format, see <link xlink:href="http://tools.ietf.org/search/rfc4287#section-4.1">RFC 4287</link>.
                For more information about AtomPub, visit <link xlink:href="http://atompub.org/">http://atompub.org/</link>.</para>
            <section xml:id="Container_Elements">
                <title>Container elements</title>
                <para>An Atom feed consists of a series of container elements, which contain
                    metadata or actual content related to the feed. </para>
                <para>The Atom Publishing Protocol supports the following container elements:</para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><link linkend="Atom_Feed_Element">Atom feed element</link></para>
                        </listitem>
                        <listitem>
                            <para><link linkend="Atom_Entry_Element">Atom entry
                                element</link></para>
                        </listitem>
                        <listitem>
                            <para><link linkend="Atom_Content-Element">Atom content
                                element</link></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <section xml:id="Atom_Feed_Element">
                    <title>Atom feed element</title>
                    <para>An Atom <code>feed</code> element is a representation of an Atom feed,
                        including metadata about the feed, and some or all of the entries associated
                        with it. </para>
                    <para>The Atom Feed element represents the top-level element of an Atom Feed
                        Document. It functions as a container for metadata and data associated with
                        the feed. Its element children consist of metadata elements that are
                        followed by zero or more Atom Entry child elements. </para>
                    <para>Following is an XML example of an entire Atom <code>feed</code>
                        element.</para>
                    <example security="internal">
                        <title>Atom feed element - XML example</title>                      
                        <programlisting language="xml"><xi:include href="./samples/AtomFeedElementExample.xml" parse="text"/></programlisting>
                    </example>
                    <example security="external">
                        <title>Atom feed element - XML example</title>                      
                        <programlisting language="xml"><xi:include href="./samples/AtomFeedElementExampleexternal.xml" parse="text"/></programlisting>
                    </example>
                    <para>Following is a JSON  example of an entire Atom <code>feed</code>
                        element.</para>
                    <example security="internal">
                        <title>Atom feed element  - JSON example</title>
                        <programlisting language="xml"><xi:include href="./samples/AtomFeedElementExample.json" parse="text"/></programlisting>
                    </example>
                    <example security="external">
                        <title>Atom feed element - JSON example</title>
                        <programlisting language="xml"><xi:include href="./samples/AtomFeedElementExampleexternal.json" parse="text"/></programlisting>
                    </example>
                </section>
                <section xml:id="Atom_Entry_Element">
                    <title>Atom entry element</title>
                    <para>The Atom <code>entry</code> element represents exactly one Atom entry,
                        outside of the context of an Atom feed. It functions as a container for
                        metadata and data associated with the entry. This element can appear as a
                        child of the Atom <code>feed</code> element, or it can appear as the
                        top-level element of a stand-alone Atom Entry Document. </para>
                    <para>Following is an XML example of an Atom <code>entry</code> element.</para>
                    <example security="internal">
                        <title>Atom entry element - XML example</title>
                        <programlisting language="xml"><xi:include href="./samples/AtomEntryElementExample.xml" parse="text"/></programlisting>
                    </example>
                    <example security="external">
                        <title>Atom entry element - XML example</title>
                        <programlisting language="xml"><xi:include href="./samples/AtomEntryElementExampleexternal.xml" parse="text"/></programlisting>
                    </example>
                    <para>Following is a JSON example of an Atom <code>entry</code> element.</para>
                    <example security="internal">
                        <title>Atom entry element - JSON example</title>
                        <programlisting language="xml"><xi:include href="./samples/AtomEntryElementExample.json" parse="text"/></programlisting>
                    </example>
                    <example security="external">
                        <title>Atom entry element - JSON example</title>
                        <programlisting language="xml"><xi:include href="./samples/AtomEntryElementExampleexternal.json" parse="text"/></programlisting>
                    </example>
                </section>
                <section xml:id="Atom_Content-Element">
                    <title>Atom content element</title>
                    <para>The Atom <code>content</code> element either contains or links to the
                        content of an entry. The type attribute specifies the MIME media
                            <parameter>type</parameter>. If no <parameter>type</parameter> attribute
                        is present, the content is treated as <parameter>text</parameter>. </para>
                    <para>Following is an XML example of an Atom <code>content</code>
                        element.</para>
                    <para>
                        <example>
                            <title>Atom content element - XML example</title>
                            <programlisting language="xml"><xi:include href="./samples/AtomContentElementExample.xml" parse="text"/></programlisting>
                        </example>
                    </para>
                    <para>Following is a JSON example of an Atom <code>content</code>
                        element.</para>
                    <para>
                        <example>
                            <title>Atom content element - JSON example</title>
                            <programlisting language="xml"><xi:include href="./samples/AtomContentElementExample.json" parse="text"/></programlisting>
                        </example>
                    </para>
                </section>
            </section>
            <section xml:id="CloudFeedsEvents">
                <title>Cloud Feeds events</title>
                <para>This section describes the event types that are supported by Cloud Feeds and
                    where they are placed in a feed.</para>
                <para>Cloud Feeds supports the following event types:</para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><link linkend="CloudFeedsProductEvents">Cloud Feeds Product
                                events</link></para>
                        </listitem>
                        <listitem>
                            <para><link linkend="CADF_events">User access events using the CADF
                                standard</link></para>
                        </listitem>
                    </itemizedlist>
                </para>
            <section xml:id="CloudFeedsProductEvents"><title>Cloud Feeds Product events</title>
                <para>Cloud Feeds supports product events that contain information that is specific
                        to a certain product. </para>
                <para>Product events are located in the <tag>event</tag> node as shown in the
                    following examples.
                <example security="internal">
                    <title>Cloud feeds product events - XML example</title>
                    <programlisting language="xml"><xi:include href="./samples/ProductEventsExampleInt.xml" parse="text"/></programlisting>
                </example>
                <example security="internal">
                    <title>Cloud feeds product events - JSON example</title>
                    <programlisting language="xml"><xi:include href="./samples/ProductEventsExampleInt.json" parse="text"/></programlisting>
                </example>
                <example security="external">
                    <title>Cloud feeds product events - XML example</title>
                    <programlisting language="xml"><xi:include href="./samples/ProductEventsExampleExt.xml" parse="text"/></programlisting>
                </example>
                <example security="external">
                    <title>Cloud feeds product events - JSON example</title>
                    <programlisting language="xml"><xi:include href="./samples/ProductEventsExampleExt.json" parse="text"/></programlisting>
                </example></para>
                    <para>The following table shows the attributes for the product event
                        node.</para>
                    <para xmlns:svg="http://www.w3.org/2000/svg"
                        xmlns:m="http://www.w3.org/1998/Math/MathML"
                        xmlns:html="http://www.w3.org/1999/xhtml"
                        xmlns:db="http://docbook.org/ns/docbook">
                        <table frame="border">
                            <caption>Attributes for the product event node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>dataCenter</code></td>
                                    <td>Optional. Specifies the data center of the event. If this
                                        attribute is not specified, <emphasis role="bold"
                                            >GLOBAL</emphasis> is assumed. <emphasis role="bold"
                                            >GLOBAL</emphasis> implies that the resource is without
                                        an assigned data center.</td>
                                </tr>
                                <tr>
                                    <td><code>endTime</code></td>
                                    <td>Optional. Specifies the time that the event ends. The format
                                        must be ISO 8601 format: <emphasis role="italic"
                                            >yyyy-mm-ddThh:mm:ss.SSSZ</emphasis> (Z designates UTC).
                                        For an event of type <emphasis role="bold">EXIST</emphasis>,
                                        the <code>startTime</code> and <code>endTime</code> reflect
                                        the event duration for the resource instance. The end time
                                        is exclusive — that is, the event occurred up to, but not
                                        during the specified value. The end time must occur after
                                        the start time.</td>
                                </tr>
                                <tr>
                                    <td><code>environment</code></td>
                                    <td>Specifies the environment from which the message originated.
                                        If this attribute is not specified, <emphasis role="bold"
                                            >PROD</emphasis> is assumed. This attribute is required
                                        for events of type <emphasis role="bold"
                                            >USAGE_SNAPSHOT</emphasis>, but is optional for all
                                        other event types.</td>
                                </tr>
                                <tr>
                                    <td><code>eventTime</code></td>
                                    <td>Optional. Specifies the time of the event, using ISO 8601
                                        format and UTC. Use this attribute instead of
                                            <code>startTime</code> and <code>endTime</code> in cases
                                        where the event does not have a range.</td>
                                </tr>
                                <tr>
                                    <td><code>id</code></td>
                                    <td>Required. Specifies the UUID for the event record. This
                                        value should be UUID version 1, 2, or 4. For more
                                        information, see RFC 4122 at <link
                                            xlink:href="http://tools.ietf.org/html/rfc4122"
                                            >http://tools.ietf.org/html/rfc4122</link>. </td>
                                </tr>
                                <tr>
                                    <td><code>referenceId</code></td>
                                    <td>Optional. Specifies a GUID that identifies the event record
                                        that this record is updating. This attribute should be used
                                        if this event is correcting another event.</td>
                                </tr>
                                <tr>
                                    <td><code>region</code></td>
                                    <td>Specifies the region in which the event is located. If this
                                        attribute is not specified, <emphasis role="bold"
                                            >GLOBAL</emphasis> is assumed. <emphasis role="bold"
                                            >GLOBAL</emphasis> implies that the resource is without
                                        an assigned region. </td>
                                </tr>
                                <tr>
                                    <td><code>resourceId</code></td>
                                    <td>Specifies the ID of the resource. This attribute is required
                                        if the <db:code>resourceType</db:code> attribute is
                                        specified in the product node, but is optional
                                        otherwise.</td>
                                </tr>
                                <tr>
                                    <td><code>resourceName</code></td>
                                    <td>Optional. Specifies the customer-defined name of the
                                        resource.</td>
                                </tr>
                                <tr>
                                    <td><code>resourceURI</code></td>
                                    <td>Optional. Specifies a URI that uniquely identifies the
                                        resource.</td>
                                </tr>
                                <tr>
                                    <td><code>rootAction</code></td>
                                    <td>Optional. Specifies the action that caused the event.</td>
                                </tr>
                                <tr>
                                    <td><code>severity</code></td>
                                    <td>Optional. Specifies the severity of the event. Valid values
                                        are <emphasis role="bold">INFO</emphasis>, <emphasis
                                            role="bold">WARNING</emphasis>, and<emphasis role="bold"
                                            > CRITICAL</emphasis>. This is attribute is valid only
                                        for system events, not for usage events.</td>
                                </tr>
                                <tr>
                                    <td><code>startTime</code></td>
                                    <td>Specifies the time that the event starts. The format must be
                                        ISO 8601 format: yyyy-mm-ddThh:mm:ss.SSSZ (Z designates
                                        UTC). The start time is inclusive, which means that the
                                        event occurred starting at the start time, not after. This
                                        attribute is required for events of type <emphasis
                                            role="bold">USAGE</emphasis>, but is optional for all
                                        other event types. </td>
                                </tr>
                                <tr>
                                    <td><code>tenantId</code></td>
                                    <td>Optional. Specifies the tenant Id of the feeds
                                        publisher</td>
                                </tr>
                                <tr>
                                    <td><code>type</code></td>
                                    <td>Required. Specifies the type of event. If one of the
                                        existing event types fails to produce any feeds, set this
                                        attribute to <emphasis role="bold">EXTENDED</emphasis> and
                                        add an <code>eventType</code> attribute to your product
                                        schema.</td>
                                </tr>
                                <tr>
                                    <td><code>version</code></td>
                                    <td>Required. Specifies the version of the event record.</td>
                                </tr>
                            </tbody>
                        </table>
                    </para>                    
                    <note>
                        <para>Cloud Feeds evaluates all product events against their XML schemas.
                        </para>
                    </note>
            </section>
            <section xml:id="CADF_events"><title>User access events in CADF</title><para>Cloud Feeds supports the Cloud Auditing Data Federation (CADF) standard. CADF provides a
                standard for the submission and retrieval of normative audit event data from
                cloud providers in the form of customized reports and logs. </para>
                <para>For more information about CADF, see <link
                            xlink:href="http://dmtf.org/sites/default/files/standards/documents/DSP0262_1.0.0.pdf"
                            >Cloud Auditing Data Federation</link>.</para>
                    <para>Cloud Feeds defines a set of event types, which take different
                        attributes.</para>
                <para>The following examples show a user access event that is encoded as a CADF
                        event . The CADF event is located inside the <link
                            linkend="Atom_Content-Element">Atom content type</link> element.</para>
                <example>
                    <title>User access events - XML example</title>
                    <programlisting language="xml"><xi:include href="./samples/CADFEventsExample.xml" parse="text"/></programlisting>
                </example>
                <example>
                    <title>User access events - JSON example</title>
                    <programlisting language="xml"><xi:include href="./samples/CADFEventsExample-json.json" parse="text"/></programlisting>
                </example>
                    <para>The following table shows the CADF nodes that are specified in
                        cadf.xsd.</para>
                    <para>
                        <table frame="border">
                            <caption>CADF nodes</caption>
                            <col width="41%"/>
                            <col width="59%"/>
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <?sbr?>
                                        <para><code>event</code></para>
                                    </td>
                                    <td>Specifies the CADF event node. Contains a set of attributes.
                                        For a detailed description of the CADF event attributes, see
                                        the "<emphasis role="italic">Attributes for CADF event
                                            node</emphasis>" table below.</td>
                                </tr>
                                <tr>
                                    <td>
                                        <para><code>initiator</code></para>
                                    </td>
                                    <td>Specifies the CADF event initiator. Contains a set of
                                        attributes. For a detailed description of the CADF initiator
                                        attributes, see the "<emphasis role="italic">Attributes for
                                            CADF initiator node</emphasis>" table below.</td>
                                </tr>
                                <tr>
                                    <td>
                                        <para><code>target</code></para>
                                    </td>
                                    <td>Specifies the target. Contains a set of attributes. For a
                                        detailed description of the CADF target attributes, see the
                                            "<emphasis role="italic">Attributes for CADF target
                                            node</emphasis>" table below.</td>
                                </tr>
                                <tr>
                                    <td>
                                        <para><code>attachments</code></para>
                                        <itemizedlist>
                                            <listitem>
                                                <para>
                                                  <code>attachment</code></para>
                                            </listitem>
                                        </itemizedlist>
                                    </td>
                                    <td>Specifies an array of extended or domain-specific
                                        information about the event or its context. The
                                            <code>attachments</code> node contains one or more nodes
                                        of type <code>attachment</code>.  For a detailed description
                                        of the CADF event attributes, see the "<emphasis
                                            role="italic">Attributes for CADF target
                                        node</emphasis>" table below.<?sbr?><?sbr?><?sbr?></td>
                                </tr>
                                <tr>
                                    <td>
                                        <para><code>observer</code></para>
                                    </td>
                                    <td>
                                        <para>Specifies the observer. For example, this can be a
                                            security provider or a service, such as Repose. Contains
                                            a set of attributes. For a detailed description of the
                                            CADF event attributes, see the "<emphasis role="italic"
                                                >Attributes for CADF observer node</emphasis>" table
                                            below.</para>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <para><code>reason</code></para>
                                    </td>
                                    <td>Contains a domain-specific reason code and policy data that
                                        provides an additional level of detail to the outcome value.
                                        Contains a set of attributes. For a detailed description of
                                        the CADF event attributes, see the "<emphasis role="italic"
                                            >Attributes for CADF reason node</emphasis>" table
                                        below.</td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                    <para>The CADF events are located inside the <emphasis role="italic">CADF event
                            node</emphasis>.</para>
                    <para>The following table shows the elements of the CADF event node.</para>
                    <para>
                        <table frame="border">
                            <caption>Elements of the CADF event node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Element/Attribute</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>id</code></td>
                                    <td>Required. Specifies the identifier for the resource.</td>
                                </tr>
                                <tr>
                                    <td><code>eventType</code></td>
                                    <td>Required. Specifies the purpose for creating the audit
                                        record. Must be set to the value "<emphasis role="italic"
                                            >activity</emphasis>".</td>
                                </tr>
                                <tr>
                                    <td><code>typeURI</code></td>
                                    <td>Required. Specifes the type of the resource that is using
                                        the CADF Resource Taxonomy. Must be set to the following
                                        URI: "<emphasis role="italic"
                                            >http://schemas.dmtf.org/cloud/audit/1.0/event</emphasis>"</td>
                                </tr>
                                <tr>
                                    <td><code>eventTime</code></td>
                                    <td>Required. Specifies the time the event occurred or began as
                                        seen by the observer.</td>
                                </tr>
                                <tr>
                                    <td><code>action</code></td>
                                    <td>Required. Specifies the type of activity that is described
                                        in the event record. Must be set to "<emphasis role="italic"
                                            >read.*| create.*</emphasis>"</td>
                                </tr>
                                <tr>
                                    <td><code>outcome</code></td>
                                    <td>Required. Specifies the outcome or result of the attempted
                                        action. Can be either "<emphasis role="italic"
                                            >success</emphasis>" or "<emphasis role="italic"
                                            >failure</emphasis>"</td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                <para>The following table shows the elements of the CADF initiator node.</para>
                    <para>
                        <table frame="border">
                            <caption>Elements of the CADF initiator node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Element/Attribute</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>id</code></td>
                                    <td>Required. Specifies the identifier for the resource.</td>
                                </tr>
                                <tr>
                                    <td><code>typeURI</code></td>
                                    <td><para>Required. Specifes the type of the resource that is using
                                        the CADF Resource Taxonomy. Can have one of the following
                                            values:<itemizedlist>
                                            <listitem>
                                                <para>"<emphasis role="italic"
                                                  >service/security/account/user</emphasis>" for
                                                  authorized requests</para>
                                            </listitem>
                                            <listitem>
                                                <para>"<emphasis role="italic"
                                                  >network/node</emphasis>" for unauthorized
                                                  requests</para>
                                            </listitem>
                                            </itemizedlist></para></td>
                                </tr>
                                <tr>
                                    <td><code>name</code></td>
                                    <td>Specifies the name of the resource.</td>
                                </tr>
                                <tr>
                                    <td><code>host</code></td>
                                    <td><para>Specifies the host. Takes one of the following 2
                                        attributes:</para><itemizedlist>
                                            <listitem><para><code>address</code></para></listitem>
                                            <listitem>
                                                <para><code>agent</code></para>
                                            </listitem>
                                        </itemizedlist></td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                    <para>The following table shows the elements of the CADF target node.</para>
                    <para>
                        <table frame="border">
                            <caption>Elements of the CADF target node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Element/Attribute</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>id</code></td>
                                    <td>Required. Specifies the identifier for the resource.</td>
                                </tr>
                                <tr>
                                    <td><code>typeURI</code></td>
                                    <td>
                                        <para>Required. Specifes the type of the resource that is
                                            using the CADF Resource Taxonomy. Can have one of the
                                            following values:<itemizedlist>
                                                <listitem>
                                                  <para>"<emphasis role="italic"
                                                  >service/security/account/user</emphasis>" for
                                                  authorized requests</para>
                                                </listitem>
                                                <listitem>
                                                  <para>"<emphasis role="italic"
                                                  >network/node</emphasis>" for unauthorized
                                                  requests</para>
                                                </listitem>
                                            </itemizedlist></para>
                                    </td>
                                </tr>
                                <tr>
                                    <td><code>name</code></td>
                                    <td>Specifies the name of the target.</td>
                                </tr>
                                <tr>
                                    <td><code>host</code></td>
                                    <td>
                                        <para>Specifies the host. Takes the following
                                            attribute:</para>
                                        <itemizedlist>
                                            <listitem>
                                                <para><code>address</code></para>
                                            </listitem>
                                        </itemizedlist>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                    <para>The following table shows the elements of the CADF attachment node.</para>
                    <para>
                        <table frame="border">
                            <caption>Elements of the CADF attachment node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Element/Attribute</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>name</code></td>
                                    <td>Specifies the name of the attachment, for eaxmple <emphasis
                                            role="italic">auditData</emphasis>.</td>
                                </tr>
                                <tr>
                                    <td><code>contentType</code></td>
                                    <td>
                                        <para>Specifies the content type, for example <emphasis
                                                role="italic">ua:auditData</emphasis>.</para>
                                    </td>
                                </tr>
                                <tr>
                                    <td><code>content</code></td>
                                    <td>Contains a set of elements that define the
                                            <code>auditData</code> property. <code>auditData</code>
                                        contains attributes that define the user access event
                                        profile for Cloud Feeds. For a detailed description of the
                                            <code>auditData</code> property, see the "<emphasis
                                            role="italic">Attributes for auditData
                                            property</emphasis>" table in <link
                                            linkend="user_access_events">User access
                                        events</link>.</td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                    <para>The following table shows the elements of the CADF observer node.</para>
                    <para>
                        <table frame="border">
                            <caption>Elements of the CADF observer node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Element/Attribute</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>id</code></td>
                                    <td>Required. Specifies the identifier for the resource.</td>
                                </tr>
                                <tr>
                                    <td><code>typeURI</code></td>
                                    <td>
                                        <para>Required. Specifes the type of the resource that is
                                            using the CADF Resource Taxonomy. Can have one of the
                                            following values:<itemizedlist>
                                                <listitem>
                                                  <para>"<emphasis role="italic"
                                                  >service/security/account/user</emphasis>" for
                                                  authorized requests</para>
                                                </listitem>
                                                <listitem>
                                                  <para>"<emphasis role="italic"
                                                  >network/node</emphasis>" for unauthorized
                                                  requests</para>
                                                </listitem>
                                            </itemizedlist></para>
                                    </td>
                                </tr>
                                <tr>
                                    <td><code>name</code></td>
                                    <td>Specifies the name.</td>
                                </tr>
                                <tr>
                                    <td><code>host</code></td>
                                    <td>
                                        <para>Specifies the host. Takes the following
                                            attribute:</para>
                                        <itemizedlist>
                                            <listitem>
                                                <para><code>address</code></para>
                                            </listitem>
                                        </itemizedlist>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                    <para>The following table shows the elements of the CADF reason node.</para>
                    <para>
                        <table frame="border">
                            <caption>Elements of the CADF reason node</caption>
                            <col width="30%"/>
                            <col width="70%"/>
                            <thead>
                                <tr>
                                    <th>Element/Attribute</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><code>reasonType</code></td>
                                    <td>Specifies the reason type. For example, this can be a URL to
                                        a HTTP status code registry, such as
                                        "http://www.iana.org/assignments/http-status-codes/http-status-codes.xml".</td>
                                </tr>
                                <tr>
                                    <td><code>reasonCode</code></td>
                                    <td>
                                        <para>Required. Specifes the HTTP status code. Can be one of
                                            the following values: "[1-5] [0-9][0-9]".</para>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </para>
                <section xml:id="user_access_events"><title>User access events</title>
                <para>Cloud Feeds supports <emphasis role="italic">user access events</emphasis>,
                            which use the CADF standard. User access events provide a generic
                            approach to capturing all API calls that are issued against Rackspace
                            product web services. </para>
                        <para>Cloud Feeds extends the CADF standard by providing a specific user
                            access event profile that captures audit data that is specific to the
                            user and the Rackspace cloud services they are using.</para>
                        <para>User access event data is included in the atom entry as a CADF
                            attachment of type <code>auditData.</code></para>
                <para>The following table shows the elements of the <code>auditData</code>
                            property.</para>
                <para>
                    <table frame="border">
                        <caption>Elements of the auditData property</caption>
                                <col width="32%"/>
                                <col width="68%"/>
                        <thead>
                            <tr>
                                <th>Element/Attribute</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>version</code></td>
                                <td>Required. Specifies the version of the audit data.</td>
                            </tr>
                                    <tr>
                                        <td><code>region</code></td>
                                        <td>Required. Specifies the region, such as DFW. If this
                                            value is not specified, GLOBAL iss assumed.</td>
                                    </tr>
                            <tr>
                                <td><code>dataCenter</code></td>
                                <td>Required. Specifies the data center of the event. If this value
                                        is not specified, GLOBAL is assumed. If this valule is set,
                                        the region value must match, for example, if dataCenter is
                                        set to "<emphasis role="italic">DFW1</emphasis>," then
                                        region must be set to "<emphasis role="italic"
                                            >DFW</emphasis>."</td>
                            </tr>
                            <tr>
                                <td><code>methodLabel</code></td>
                                <td>Optional. Specifies the method that is used for this
                                    request. This attribute uses the friendly name of an API
                                    request, for example "<emphasis role="italic"
                                        >addUser</emphasis>."</td>
                            </tr>
                            <tr>
                                <td><code>requestURL</code></td>
                                <td>Specifies the URI of the request. If the URI contains any
                                    query strings, they truncated.</td>
                            </tr>
                            <tr>
                                <td><code>queryString</code></td>
                                <td>Optional. Specifies the query string. The query string is
                                    part of a URI and containes the data that was added to the
                                    base URI, for example <code>/?query_string</code>.</td>
                            </tr>
                            <tr>
                                <td><code>tenantId</code></td>
                                <td>Specifies the tenant id.</td>
                            </tr>
                            <tr>
                                <td><code>responseMessage</code></td>
                                <td>Specifies the response message that is sent as a response,
                                    to the request, for example "<emphasis role="italic"
                                        >CREATED</emphasis>."</td>
                            </tr>
                            <tr>
                                <td><code>userName</code></td>
                                <td>Specifies the username that the initiator is acting on
                                    behalf of.</td>
                            </tr>
                            <tr>
                                <td><code>roles</code></td>
                                <td>Required. Contains a space-separated list of user roles.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
            </section>
            </section>
        </section>
        </section>
        <section xml:id="Limits-d1e1208">
            <title>Cloud Feeds usage specifications and rules</title>
            <para>All accounts, by default, have a preconfigured set of thresholds (or limits) to
                manage capacity and prevent abuse of the system. </para>
            <section xml:id="Support_for_JSON"><title>Data format in Accept header</title><para>Cloud Feeds supports both XML and JSON formats. You can specify the format in which you want
                    your  data to be returned in by configuring the data format the
                        <code>Accept:</code> header in the API request.</para>
                <para>The following table shows the configuration settings for JSON and XML:</para>
                <para>
                    <table frame="border">
                        <caption>Data format in Accept header</caption>
                        <col width="25%"/>
                        <col width="75%"/>
                        <thead>
                            <tr>
                                <th>Data Format</th>
                                <th>Header</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>JSON</td>
                                <td><code>Accept: application/vnd.rackspace.atom+json</code></td>
                            </tr>
                            <tr>
                                <td>XML</td>
                                <td><code>Accept: application/atom+xml </code></td>
                            </tr>
                        </tbody>
                    </table>
                </para></section>
            <section xml:id="datetimeformat">
                <title>Date and time format</title>
                <para> For the display and consumption of date and time values, the Cloud Feeds
                    service uses a date format that complies with ISO 8601. </para>
                <example>
                    <title>Cloud Feeds date and time format example </title>
                    <programlisting>yyyy-MM-dd'T'HH:mm:ss.SSSZ</programlisting>
                    <para>For example, September 5, 2013 at 2:50:46:904 P.M., Universal Time, would
                        have the following format:</para>
                    <para>
                        <programlisting>2013-09-05T14:50:46.904Z</programlisting>
                    </para>
                </example>
                <para>The following table describes the date and time format codes.</para>
                <table frame="border">
                    <caption>Explanation of date and time format codes</caption>
                    <thead>
                        <tr>
                            <td>Code</td>
                            <td>Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>yyyy</td>
                            <td>Four-digit year</td>
                        </tr>
                        <tr>
                            <td>MM</td>
                            <td>Two-digit month</td>
                        </tr>
                        <tr>
                            <td>dd</td>
                            <td>Two-digit day of the month</td>
                        </tr>
                        <tr>
                            <td>T</td>
                            <td>Separator for date and time</td>
                        </tr>
                        <tr>
                            <td>HH</td>
                            <td>Two-digit hour of the day (00-23)</td>
                        </tr>
                        <tr>
                            <td>mm</td>
                            <td>Two-digit minutes of the hour</td>
                        </tr>
                        <tr>
                            <td>ss</td>
                            <td>Two-digit seconds of the minute</td>
                        </tr>
                        <tr>
                            <td>SSS</td>
                            <td>Three-digit milliseconds of the second</td>
                        </tr>
                        <tr>
                            <td>Z</td>
                            <td>RFC-822 time zone</td>
                        </tr>
                    </tbody>
                </table>
            </section>
            <section xml:id="pagination">
                <title>Pagination</title>
                <para>To reduce the load on the service, list operations return a maximum of 25
                    entries at a time. However, you can use the <parameter>limit</parameter>
                    parameter in the <command>GET</command> request to allow up to 1,000 entries per
                    page. Specifying the number of entries to return is referred to as <emphasis role="italic">pagination</emphasis>. If a request supplies no limit or one
                    that exceeds the configured default limit, the default value is used
                    instead.</para>
                <para>Pagination provides the ability to limit the size of the returned data and
                    retrieve a specified subset of a large data set. Pagination has the following
                    key concepts: limit and marker. </para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis>Limit</emphasis> is the restriction on the maximum
                                number of items for that type that can be returned.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis>Marker</emphasis> is the ID of the last item in the
                                previous list returned. For example, a query could request the next
                                10 instances after the instance 1234 as follows:
                                    <code>?limit=10&amp;marker=1234</code>. Items are displayed
                                sorted by ID. </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>If the content returned by a request is paginated, the response includes a
                    structured link with the basic structure <code>{"href": "&lt;url>", "rel":
                        "next"}</code>. Any response that is truncated by pagination will have a
                        <emphasis>next</emphasis> link, which points to the next item in the
                    collection. If there are no more items, no <emphasis>next</emphasis> link is
                    returned.</para>
            </section>
            <section xml:id="Rules_CF_PS">
                <title>Response codes for Cloud Feeds publishers and subscribers</title>
                <para>
                    <table frame="border">
                        <caption>Response codes for subscribers</caption>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="20%"/>
                        <thead>
                            <tr>
                                <th>Code category</th>
                                <th>Code</th>
                                <th>Code description</th>
                                <th>Example request</th>
                                <th>Example response</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Successful</td>
                                <td>200</td>
                                <td>Ok</td>
                                <td><command>GET</command> request to Collection URI</td>
                                <td>200 + Atom feed document</td>
                            </tr>
                            <tr>
                                <td>Successful</td>
                                <td>200</td>
                                <td>Ok</td>
                                <td><command>GET</command> request to Member URI</td>
                                <td>200 + Member Representation</td>
                            </tr>
                            <tr>
                                <td>Client Error</td>
                                <td>401</td>
                                <td>None</td>
                                <td><command>GET</command> request with a missing, expired, or
                                    invalid token</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td>Client Error</td>
                                <td>404</td>
                                <td>None</td>
                                <td><command>GET</command> request to non-existent page</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td>Client Error</td>
                                <td>405</td>
                                <td>None</td>
                                <td>Using any method other than <command>GET</command></td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td>Server Error</td>
                                <td>500</td>
                                <td>Internal Server Error</td>
                                <td><command>GET</command> request while database is offline or
                                    other network failure</td>
                                <td>None</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <table security="internal" frame="border">
                    <caption>Response codes for publishers</caption>
                    <col width="16%"/>
                    <col width="16%"/>
                    <col width="16%"/>
                    <col width="16%"/>
                    <col width="18%"/>
                    <col width="16%"/>
                    <thead>
                        <tr>
                            <th>Code category</th>
                            <th>Code</th>
                            <th>Code description</th>
                            <th>Example request</th>
                            <th>Example response</th>
                            <th>Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Successful</td>
                            <td>201</td>
                            <td>Created</td>
                            <td><command>POST</command> request to Collection URI with Member
                                Representation</td>
                            <td>Location: Member Entry URI</td>
                            <td>The entry was successfully published to the feed, no further action
                                is needed</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>400</td>
                            <td>None</td>
                            <td><command>POST</command> request with schema validation error </td>
                            <td>Schema validation errors have content in the message bofy</td>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>401</td>
                            <td>None</td>
                            <td><command>POST</command> request with a missing, expired, or invalid
                                token. Re-post the message with a valid token. </td>
                            <td/>
                            <td>Retry with a valid token.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>403</td>
                            <td>None</td>
                            <td><command>POST</command> forbidden (i.e.: tenant trying to access
                                wrong protocol) </td>
                            <td/>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>404</td>
                            <td>None</td>
                            <td>Not found </td>
                            <td/>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>405</td>
                            <td>None</td>
                            <td>Used a <command>PUT</command> request instead of a
                                    <command>POST</command> request.</td>
                            <td/>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>409</td>
                            <td>None</td>
                            <td><command>POST</command> that is a duplicate (conflict). All feeds
                                return 409 if duplicate entryId is sent in the request except for
                                Nova and Glance because Cloud Feeds generates unique entryIds for
                                these feeds. Note that for Common Usage Framework standard entries,
                                the event ID will be used as the Atom entry ID. (If it is posted
                                without an Atom entry ID, the event ID will be used as the Atom
                                entry ID. If it is posted with an Atom entry ID, the Atom entry ID
                                will be overwritten by the event ID.)</td>
                            <td>Duplicates have no content in the message body.</td>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>415</td>
                            <td>None</td>
                            <td><command>POST</command> request that is in an unsupported format
                                (i.e., sending json when XML is expected). </td>
                            <td/>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. Can be an error with the event.</td>
                            <td>422</td>
                            <td>None</td>
                            <td>Typically this error occurs when malformed Atom XML is passed to
                                Cloud Feeds. It can also occur when no Atom XML was passed in.</td>
                            <td/>
                            <td>Fix entry and re-post.</td>
                        </tr>
                        <tr>
                            <td>Client Error. The request is rate limited.</td>
                            <td>429</td>
                            <td>Rate Limited</td>
                            <td>Cloud Feeds is set to 500 <command>POST</command> requests per
                                second per user. </td>
                            <td/>
                            <td>Retry until the entry is posted.</td>
                        </tr>
                        <tr>
                            <td>Server Error</td>
                            <td>500</td>
                            <td>Internal Server Error</td>
                            <td><command>POST</command> request while database is offline, or other
                                network failure.</td>
                            <td/>
                            <td>Retry until network failure is resolved.</td>
                        </tr>
                    </tbody>
                </table>
                <para security="internal">Response Codes:</para>
                <itemizedlist security="internal">
                    <listitem>
                        <para>For every event posted to Cloud Feeds, ensure that the response is a
                            HTTP 201 (Created) and the Atom XML posted is in the response body. If
                            any response other than a 201 is received, there is either a problem
                            with the event or a problem with Cloud Feeds</para>
                    </listitem>
                    <listitem>
                        <para>If a 5xx response is received, the problem is with Cloud Feeds (e.g.
                            Cloud Feeds is down). As a result, the publisher must queue their events
                            and re-post. Publishers should queue events until the issue is
                            resolved</para>
                    </listitem>
                    <listitem>
                        <para>If a 4xx response is received, the problem is with the event. This
                            could be an improperly formatted event or an event that does not adhere
                            to the business rules included in the validation schema. </para>
                    </listitem>
                </itemizedlist>
            </section>
        </section>
    </chapter>
    <chapter xml:id="Using_Cloud_Feeds">
        <title>Using Cloud Feeds</title>
        <para>To use Cloud Feeds you need to have a basic understanding of REST APIs. This section
            describes how to use the Cloud Feeds REST API to perform basic API operations.</para>
        <para>
            <important>
                <para>This section assumes that you are using token-based authentication and that
                    you have successfully authenticated against the Rackspace Cloud API and obtained
                    an authentication token as described in <link
                        linkend="Token_based_authentication">Authenticating by using token-based
                        authentication</link>. Please make sure to record the token because you need
                    it to complete the exercises in this chapter. For information on how to make API
                    calls using basic authentication, see <link linkend="Basic_Authentication"
                        >Authenticating by using basic authentication</link>.</para>
            </important>
        </para>
        <para security="internal">
            <note>
                <para><code>tid:</code>, <code>rgn:</code>, <code>dc:</code>, <code>rid:</code>, and
                        <code>type:</code> are prefixed categories that are added by Cloud Feeds and
                    cannot be overridden.</para>
            </note>
        </para>
        <section xml:id="Adding_a_New_Atom_Entry-d1e1303" security="internal">
            <title>Adding a new Atom event</title>
            <para>You can use a <command>POST </command>request to insert new Atom entries into Atom
                Hopper. </para>
            <para>The following examples show what the content of an Atom entry can look
                like:</para>
            <example><title>Inserting a new Atom entry - XML example</title>
                <programlisting language="xml"><xi:include href="./samples/reqAddNewAtomEntry.xml" parse="text"/></programlisting></example>
            <example><title>Inserting a new Atom entry - JSON example</title>
                <programlisting language="xml"><xi:include href="./samples/reqAddNewAtomEntry.json" parse="text"/></programlisting></example>
            <para>To insert a new Atom event in a feed, you first need to create an Atom entry and
                save it in the same directory from which you are making your request.</para>
                <para>You then make a <command>POST</command> request with the specified feed URL
                and a pointer to the Atom entry that you want to submit by using the following
                syntax.  <emphasis role="italic">inputFile</emphasis> specifies the path to the file
                that contains the Atom entry.</para>
                <para>
                    <programlisting>curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -H "Content-Type: application/atom+xml" -X POST https://<replaceable>endpointURL</replaceable>/<replaceable>feedName</replaceable>/events -d@<replaceable>inputFile </replaceable></programlisting>
                </para>
 
                <para>The following example shows how to add a new Atom entry by providing a pointer
                    to the entry:</para>
                <para>
                    <programlisting>curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -H "Content-Type: application/atom+xml" -X POST https://atom.staging.ord1.us.ci.rackspace.net/files/events -d@./cloudfiles-bandwidth-usage.xml</programlisting>
                </para>
                <para>
                    <important>
                        <para>When making the <command>POST</command> request, make sure to set the
                        HTTP Header to Content-Type: application/atom+xml.</para>
                    </important>
                </para>
                <para>After you have successfully posted the Atom content to the correct endpoint
                you receive an <code>HTTP 201</code> status code as a response. The response body
                contains the Atom content that you posted in the request body, as well as category
                information for the entry, as shown in the following examples.</para>
            <example><title>Response for adding an atom entry - XML</title>
                <programlisting language="xml"><xi:include href="./samples/resAddNewAtomEntry.xml" parse="text"/></programlisting></example>
            <example><title>Response for adding an atom entry - JSON</title>
                <programlisting language="xml"><xi:include href="./samples/resAddNewAtomEntry.json" parse="text"/></programlisting></example>
                <para>In the response, each Atom entry has a self-referencing link. The appearance
                of your self-referencing Atom entry varies depending on whether you use an HTTPS
                    <command>POST</command> request or not.</para>
                <para>With an HTTPS <command>POST</command> request, the link looks as
                follows:<programlisting>&lt;link href="https://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/events/entries/urn:uuid:9b850562-d357-4cf8-8811-048a6730e869" rel="self" />
</programlisting></para>
        <section xml:id="Adding_one-or-more-categories-d1e1305">
            <title>Adding one or more categories</title>
            <para>The <code>category</code> element provides category information for a feed and is
                    case sensitive. The <code>category</code> element can appear anywhere as child
                    of the <code>atom:entry</code> element. To add categories to an Atom entry, you
                    must include the <code>category</code> element with a <code>term</code>
                    attribute as shown here:</para>
            <programlisting>&lt;category term="mycategory1" /></programlisting>
            <para>You can also add multiple categories by using the following syntax:</para>
            <programlisting>&lt;category term="mycategory1" />
&lt;category term="mycategory2" /></programlisting>
            <note>
                <para> Category tags are case sensitive. The <code>category term</code> attribute
                        has a maximum length of 256 characters. </para>
            </note>
        </section>
        </section>
        <section xml:id="Get_Atom_Entry">
            <title>Reading a feed</title>
            <para>To retrieve an Atom feed or an Atom entry that was posted, submit a
                    <command>GET</command> request by using the following syntax:</para>
            <para>
                <programlisting security="external">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://<replaceable>endpointURL</replaceable>/<replaceable>feedName/</replaceable>events/<replaceable>tenantID</replaceable></programlisting>
                <programlisting security="internal">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://<replaceable>endpointURL</replaceable>/<replaceable>feedName/</replaceable>events</programlisting>
            </para>
            <para>The placeholders are defined in the following table.</para>
            <para>
                <table frame="border">
                    <caption>Syntax elements</caption>
                    <col width="30%"/>
                    <col width="70%"/>
                    <thead>
                        <tr align="left">
                            <td>Placeholder</td>
                            <td>Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td><emphasis role="italic">authenticationToken</emphasis></td>
                            <td>Specifies the token that you obtain during authentication.</td>
                        </tr>
                        <tr align="left">
                            <td><emphasis role="italic">endpointURL</emphasis></td>
                            <td>Specifies the URL/VIP that was obtained from the list of Cloud Feeds
                                endpoints.</td>
                        </tr>
                        <tr align="left">
                            <td><emphasis role="italic">feedName</emphasis></td>
                            <td>Specifies the name of the feeds for which you are trying to fetch
                                events. Examples of a feed names are: nova, servers, queues,
                                files.</td>
                        </tr>
                        <tr align="left" security="external">
                            <td><emphasis role="italic">tenantID</emphasis></td>
                            <td>Specifies the tenantID for the given tenant.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>following is an example of a request for a feed:</para>
            <para>
                <programlisting security="external">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://dfw.feeds.api.rackspacecloud.com/nova/events/<replaceable>tenantID</replaceable></programlisting>
                <programlisting security="internal">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://atom.staging.ord1.us.ci.rackspace.net/nova/events</programlisting>
            </para>
            <para>This request returns 25 of the latest events in the nova feed from the DFW data
                center. To make the formatting of the returned events more readable, you can submit
                the following request:</para>
            <para>
                <programlisting security="external">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://dfw.feeds.api.rackspacecloud.com/nova/events/<replaceable>tenantID</replaceable> | xmllint --format -</programlisting>
                <programlisting security="internal">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://atom.staging.ord1.us.ci.rackspace.net/nova/events | xmllint --format -</programlisting>
            </para>
            <note>
                <para>Control and illegal characters must be escaped in the URL.</para>
            </note>
            
        </section>
            <section xml:id="Navigating_through_feeds">
                <title>Navigating through feeds</title>
            <para>A successful response to a <command>GET</command> request to obtain a feed returns
                links that help you navigate to the Atom entries in the feed. The following links
                are returned in the Cloud Feeds responses:</para>
            <itemizedlist>
                <listitem>
                    <para>Use the <emphasis role="bold">current</emphasis> link node to go to the
                        current feed.</para>
                </listitem>
                <listitem>
                    <para>Use the <emphasis role="bold">last</emphasis> links to go to the last page
                        of Atom entries in the database for the specified feed. Using the last link
                        can be useful for finding the first Atom for a given feed. Note that Cloud
                        Feeds uses a mock last link marker. This helps move some of the heavier
                        queries off the feed head call.</para>
                </listitem>
                <listitem>
                    <para>Use the <emphasis role="bold">self</emphasis> link to bring back the entry
                        that you are currently viewing. If the feeds are being hit with no options,
                        any new Atom entries have been entered, then those entries also
                        appear.</para>
                </listitem>
                <listitem>
                    <para>Use the <emphasis role="bold">next</emphasis> link to navigate by page to
                        the next page of Atom entries. When you get to the end of the feed, this
                        link is no longer present.</para>
                </listitem>
                <listitem>
                    <para>Use the <emphasis role="bold">previous</emphasis> link to navigate by page
                        to the previous page of Atom entries. Sometimes the link is in the feed
                        header; however, the link is not be in the feed header if the feed is empty.
                        If you are at the top of the feed and you follow this link, an empty feed is
                        returned unless new entries have occurred since you last polled. In a feed,
                        the entries are shown in order from newest to oldest. </para>
                    <para>The following diagram shows how pagination works with Cloud Feeds:</para>
                </listitem>
            </itemizedlist>
            <informalfigure>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/CloudFeedsAtomHopper.png" contentwidth="6in"/>
                    </imageobject>
                </mediaobject>
            </informalfigure>
            <important xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">
                <para>When viewed in a web browser or web tool such as Chrome Poster, each <emphasis role="bold">&amp;</emphasis> character in a link returns as an HTML
                    ampersand character code. To follow the link in a web browser or web tool such
                    as Poster, you must change each HTML ampersand character (&amp;amp;) to
                        <emphasis role="bold">&amp;</emphasis>. For example, when viewed in a web
                    browser, the feed returns the following link: </para>
            </important>
            <programlisting security="external">&lt;link href="https://ord.feeds.api.rackspacecloud.com/namespace/feed/events/<replaceable>tenantID</replaceable>/?marker=urn:uuid:676f3860-447c-40a3-8f61-9791819cc82f&amp;amp;limit=25&amp;amp;search=&amp;amp;direction=forward" rel="previous" />
</programlisting>
                <programlisting security="internal">&lt;link href="https://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/events/?marker=urn:uuid:676f3860-447c-40a3-8f61-9791819cc82f&amp;amp;limit=25&amp;amp;search=&amp;amp;direction=forward" rel="previous" />
</programlisting>
            <para>To follow the link from a web browser, you must change each instance of &amp;amp;
                to &amp;, as follows:</para>
            <programlisting security="external">https://ord.feeds.api.rackspacecloud.com/namespace/feed/events/<replaceable>tenantID</replaceable>/?marker=urn:uuid:676f3860-447c-40a3-8f61-9791819cc82f&amp;limit=25&amp;search=&amp;direction=forward
</programlisting>
                <programlisting security="internal">https://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/events/?marker=urn:uuid:676f3860-447c-40a3-8f61-9791819cc82f&amp;limit=25&amp;search=&amp;direction=forward
</programlisting>
            <para>This issue should not be a concern when you are using an XML Parser. </para></section>
            <section xml:id="Cloud_Query_Pardle0001">
            <title>Cloud Feeds query parameters</title>
            <para>You can use query parameters to customize the entries and their order within a
                feed. Query parameters are part of the URL that is passed to the server as part of
                an API request. When you add query parameters to an API request, you modify the
                results in specific ways, such as refining your query or sorting the output. </para>
            <para>A typical URL that contains a query parameter looks like the following URL:</para>
            <para><code>http://server/program/path/?query_string</code></para>
            <para>The query string is composed of one or more field value pairs that use the
                following format:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Within each field value pair, the field name and value are separated
                            by an equals sign (<emphasis role="italic">=</emphasis>).</para>
                    </listitem>
                    <listitem>
                        <para>Pairs in series are separated by ampersand (&amp;), as shown in the
                            following example:</para>
                        <para><code>field1=value1&amp;field2=value2&amp;field3=value3...</code></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The following table summarizes the query parameters you can specify for Cloud
                Feeds:</para>
            <para>
                <table frame="border">
                    <caption>Query parameters</caption>
                    <col width="15%"/>
                    <col width="34%"/>
                    <col width="51%"/>
                    <thead>
                        <tr>
                            <th>Query parameter</th>
                            <th>Description</th>
                            <th>Acceptable values</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><parameter>marker</parameter></td>
                            <td>Specifies a UUI that exists in the Cloud Feeds system.</td>
                            <td>Must be a valid UUI that exists in the Cloud Feeds system, for
                                example <code>rn:uuid:cd42141b-c030-6fca-6704-8285789a274b</code>.
                                This parameter can also be set to <code>last</code>. If this
                                parameter is set to <code>last</code>, Cloud Feed locates a page
                                that contains the oldest entry in the feed.</td>
                        </tr>
                        <tr>
                            <td><parameter>direction</parameter></td>
                            <td>Specifies the direction from which to return entries, starting from
                                the current marker or entry.</td>
                            <td>Can be either <code>forward</code> or <code>backward</code>.</td>
                        </tr>
                        <tr>
                            <td><parameter>limit</parameter></td>
                            <td>Specifies the number of entries to be returned. If the entered limit
                                is greater than the actual number of entries, the actual number of
                                entries is used.</td>
                            <td>Must be an integer from 1 to 1000.</td>
                        </tr>
                        <tr>
                            <td><parameter>search</parameter></td>
                            <td>Allows filtering of a feed only for events of a specified
                                category.</td>
                            <td>See the <link linkend="Filter_Entries_by_Category_d1e1315">Filtering
                                    entries by category</link> section.</td>
                        </tr>
                        <tr>
                            <td><parameter>startingAt</parameter></td>
                            <td>Allows filtering for a number of entries that start at a specified
                                time stamp.</td>
                            <td>Must be in ISO 8601 Date and Time format, and must contain a time
                                zone, for example: 2014-03-10T06:00:00.000Z. For more information,
                                see <link xlink:href="http://en.wikipedia.org/wiki/ISO_8601">http://en.wikipedia.org/wiki/ISO_8601</link>.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>
                <note>
                    <para>The <parameter>startingAt</parameter> parameter cannot be used together
                        with the <parameter>marker</parameter> parameter. If the
                            <parameter>startingAt</parameter> parameter is used without a
                            <parameter>direction</parameter> parameter, then forward direction is
                        assumed.</para>
                </note>
            </para>
        </section>
        <section xml:id="Select_Entries_by_Marker_and_Forward_and_Backward_Paging-d1e1311">
            <title>Filtering entries by the using the marker parameter </title>
            <para>You can use the <parameter>marker</parameter> parameter to denote an entry that
                you have previously used. If you specify a marker in the <command>GET</command>
                request, you can also specify a value for the <parameter>direction</parameter>
                parameter. If you do not specify a value for the <parameter>direction</parameter>
                parameter, the default value of <code>forward</code> is used. </para>
            <para>The following example shows a <parameter>marker</parameter> parameter specified
                and the <parameter>direction</parameter> parameter set to
                    <parameter>forward</parameter>:</para>
            <para>
                <programlisting security="internal">https://atom.staging.ord1.us.ci.rackspace.net/feed/events/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=forward </programlisting>
                <programlisting security="external">https://ord.feeds.api.rackspacecloud.com/feed/events/<replaceable>tenantID</replaceable>/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=forward </programlisting>
            </para>
            <para>The following example shows a <parameter>marker</parameter> parameter specified
                and the <parameter>direction</parameter> parameter set to
                    <parameter>backward</parameter>:</para>
            <para>
                <programlisting security="internal">https://atom.staging.ord1.us.ci.rackspace.net/feed/events/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=backward
</programlisting>
                <programlisting security="external">https://ord.feeds.api.rackspacecloud.com/feed/events/<replaceable>tenantID</replaceable>/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=backward
</programlisting>
            </para>
            <para>You can use the <parameter>limit</parameter> parameter to specify the number of
                entries to return. By default the limit is set to 25. The minimum limit is 1 and the
                maximum limit is 1,000.</para>
            <para>The following example shows the <parameter>marker</parameter> parameter specified
                and the <parameter>limit</parameter> parameter set to 50, paging forward.</para>
            <programlisting security="internal">https://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/events/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=forward&amp;limit=50
</programlisting>
            <programlisting security="external">https://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/events/<replaceable>tenantID</replaceable>/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=forward&amp;limit=50
</programlisting>
            <para>The following example shows a marker set and the
                limit set to 50, paging backward.</para>
            <programlisting security="internal">https://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/events/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=backward&amp;limit=50
</programlisting>
            <programlisting security="external">https://ord.feeds.api.rackspacecloud.com/namespace/feed/events/<replaceable>tenantID</replaceable>/?marker=urn:uuid:8439541b-b40e-4c23-b290-2820bd64257d&amp;direction=backward&amp;limit=50
</programlisting>
        </section>
        <section xml:id="Filter_Entries_by_Category_d1e1315">
            <title>Filtering entries by categories <?sbr?></title>
            <para>You can use a <command>GET</command> request to filter for certain types of events
                you want to obtain from a feed by defining a specific <emphasis role="italic">search
                    category</emphasis>. You specify the search categories by adding
                    <parameter>search</parameter> as the URL parameter at the end of the feeds URL
                and then specifying the category or item for which you want to search. The following
                example shows how to get all event types that fall under the
                cloudsites.metered.site.usage category:</para>
            <para>
                <programlisting security="external">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://ord.feeds.api.rackspacecloud.com/sites/events/<replaceable>tenantID</replaceable>/?search=(cat=type:cloudsites.metered.site.usage)</programlisting>
                <programlisting security="internal">curl -H "X-Auth-Token: <replaceable>authenticationToken</replaceable>" -X GET https://atom.staging.ord1.us.ci.rackspace.net/sites/events/?search=(cat=type:cloudsites.metered.site.usage)</programlisting>
            </para>
            <section xml:id="Filtering_using_AND_OR_NOT">
                <title>Advanced filtering by using AND, OR, and NOT</title>
                        <para>Cloud Feeds supports advanced filters by using the AND, OR, and NOT
                    operators and their combinations. </para>
                        <para>The following example shows how to filter for multiple categories by
                    using an AND statement:</para>
                        <para>
                            <example security="internal">
                                <title>Filtering for multiple categories by using an AND
                            statement</title>
                                <programlisting>http://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/?search=(AND(cat=CAT1)(cat=CAT2))</programlisting>
                            </example>
                            <example security="external">
                                <title>Filtering for multiple categories by using an AND
                            statement</title>
                                <programlisting>http://ord.feeds.api.rackspacecloud.com/namespace/feed/<replaceable>tenantID</replaceable>/?search=(AND(cat=CAT1)(cat=CAT2))</programlisting>
                            </example>
                        </para>
                        <para>The following example shows how to filter for multiple categories by
                    using an OR statement:</para>
                        <para>
                            <example security="internal">
                                <title>Filtering for multiple categories by using an OR
                            statement</title>
                                <programlisting>http://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/?search=(OR(cat=CAT1)(cat=CAT2))
</programlisting>
                            </example>
                            <example security="external">
                                <title>Filtering for multiple categories by using an OR
                            statement</title>
                                <programlisting>http://ord.feeds.api.rackspacecloud.com/namespace/feed/<replaceable>tenantID</replaceable>/?search=(OR(cat=CAT1)(cat=CAT2))
</programlisting>
                            </example>
                        </para>
                        <para>The following example shows how to filter for a category that is
                    entered as not <emphasis role="bold">CAT1</emphasis> by using a NOT
                    statement:</para>
                        <para>
                            <example security="internal">
                                <title>Filtering for a single category using a NOT statement</title>
                                <programlisting> http://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/?search=(NOT(cat=CAT1)) </programlisting>
                            </example>
                            <example security="external">
                                <title>Filtering for a single category using a NOT statement</title>
                                <programlisting>http://ord.feeds.api.rackspacecloud.com/namespace/feed/<replaceable>tenantID</replaceable>/?search=(NOT(cat=CAT1)) </programlisting>
                            </example>
                        </para>
                        <para>You can also use the AND, OR, and NOT operators to filter for multiple
                            categories combined.</para>
                        <para>The following example shows how to search for a category that is
                            entered as CAT1 and ( CAT2 or CAT3 ) but not CAT4:</para>
                        <para>
                            <example security="internal">
                                <title>Filtering for multiple categories using an AND
                            statement</title>
                                <programlisting>http://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/?search=(AND(cat=CAT1)(OR(cat=CAT2)(cat=CAT3))(NOT(cat=CAT4))) </programlisting>
                            </example>
                            <example security="external">
                                <title>Filtering for multiple categories using an AND
                            statement</title>
                                <programlisting>http://ord.feeds.api.rackspacecloud.com/namespace/namespace/feed/<replaceable>tenantID</replaceable>/?search=(AND(cat=CAT1)(OR(cat=CAT2)(cat=CAT3))(NOT(cat=CAT4))) </programlisting>
                            </example>
                        </para>
                    </section>
            </section>
        <section xml:id="Filtering_by_timestamp"><title>Filtering by time stamp</title>
            <para>You can use the <parameter>startingAt</parameter> query parameter to filter for
                feed entries that start at a certain time stamp. The parameter takes an ISO 8601
                Date and Time format (see <link xlink:href="http://en.wikipedia.org/wiki/ISO_8601">http://en.wikipedia.org/wiki/ISO_8601</link>) and must contain a timezone, such
                as such as 2014-03-10T06:00:00.000Z.</para>
            <para>The following URL shows how to fetch entries with a time stamp that is newer than
                2014-03-10 00:00:00.000 UTC:</para>
            <programlisting security="internal">http://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/?startingAt=2014-03-10T00:00:00.000Z</programlisting>
            <programlisting security="external">http://ord.feeds.api.rackspacecloud.com/namespace/feed/<replaceable>tenantID</replaceable>/?startingAt=2014-03-10T00:00:00.000Z</programlisting>
            <para>The following URL shows how to fetch entries with a time stamp that older than
                2014-03-10 00:00:00.000 UTC by setting the <parameter>direction</parameter>
                parameter to <emphasis role="italic">backward</emphasis>:</para>
            <programlisting security="internal">http://atom.staging.ord1.us.ci.rackspace.net/namespace/feed/?startingAt=2014-03-10T00:00:00.000Z&amp;direction=backward</programlisting>
            <programlisting security="external">http://ord.feeds.api.rackspacecloud.com/namespace/feed/<replaceable>tenantID</replaceable>/?startingAt=2014-03-10T00:00:00.000Z&amp;direction=backward</programlisting>
            <para>
                <note>
                    <para>The <parameter>startingAt</parameter> parameter can not be used together
                        with the <parameter>marker</parameter> parameter.</para>
                    <para>If the <parameter>startingAt</parameter> parameter is used without a
                            <parameter>direction</parameter> parameter, then the <emphasis role="italic">forward </emphasis> direction is assumed. If you want to
                        fetch feeds from a time period before the time specified in the time stamp,
                        you need to use the <parameter>direction</parameter> parameter and then the
                            <emphasis role="italic">backward </emphasis> description, like the
                        following: <parameter>direction</parameter> set to <emphasis role="italic">backward</emphasis>.</para>
                </note>
            </para></section>
        <section xml:id="Weak_ETag_Support_d1e1321">
            <title>Support for weak ETags </title>
            <para>Cloud Feeds supports weak entity tags (ETags). An
                ETag identifies a specific feed version. When the
                content of the feed changes, a different ETag is
                assigned. ETags provide an efficient way of checking
                whether a previously processed feed has changed. Weak
                ETags are sent back in the HTTP header with a name of
                ETag.</para>
            <para>Following is an example of weak ETag for a feed that contains more than one Atom
                entry:</para>
            <programlisting>W/"4ec07c96e1399298d48db885c014703b"</programlisting>
            <para>ETags are not returned in the following situations:<itemizedlist>
                    <listitem>
                        <para>The feed is empty.</para>
                    </listitem>
                    <listitem>
                        <para>You use the <parameter>marker</parameter> parameter, you specify the
                            direction as <emphasis role="italic">forward</emphasis>, and no entries
                            exist after that marker.</para>
                    </listitem>
                </itemizedlist></para>
        </section>
        <section xml:id="Cloudfeedsbestpractices"><title>Cloud Feeds best practices</title><para>
        </para>
        <section xml:id="Bestpracticespublishers" security="internal"><title>Best Practices for publishers</title><para>Cloud Feeds offers recommendation actions for publishers that are based on a specific return
                    code that is obtained when publishing an entry. The following table shows a list
                    of recommended actions based on return code.</para>
                <para>
                    <table frame="border">
                        <caption>Actions based on return codes</caption>
                        <col width="25%"/>
                        <col width="75%"/>
                        <thead>
                            <tr>
                                <th>Return code</th>
                                <th>Recommended action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>200</td>
                                <td>This is an error.  Resubmit to verify that the entry was
                                    committed into Cloud Feeds.</td>
                            </tr>
                            <tr>
                                <td>201</td>
                                <td>The entry was successfully published to the feed, no action
                                    needed</td>
                            </tr>
                            <tr>
                                <td>400</td>
                                <td>Invalid message format.  Please verify that your message is
                                    properly formatted and resubmit when updated.</td>
                            </tr>
                            <tr>
                                <td>401</td>
                                <td>Unable to authenticate token. Obtain a new token.</td>
                            </tr>
                            <tr>
                                <td>404</td>
                                <td>No authorization for the action upon the URI, or URI does not
                                    exist.  Determine that your role has authorization to issue
                                        <command>POST</command> requests to Cloud Feeds.  Ensure
                                    that your URI is valid.</td>
                            </tr>
                            <tr>
                                <td>405</td>
                                <td>No authorization for the action upon the URI, or URI does not
                                    exist.  Determine that your role has authorization to
                                        <command>POST</command> to Cloud Feeds.  Ensure that your
                                    URI is valid.</td>
                            </tr>
                            <tr>
                                <td>409</td>
                                <td>The entry's uuid already exists in the feed's database and
                                    cannot be accepted.  Resubmit with a unique ID.</td>
                            </tr>
                            <tr>
                                <td>429</td>
                                <td>The user id has been rate-limited.  Resubmit when your user id
                                    is issuing fewer <command>POST</command> requests.</td>
                            </tr>
                            <tr>
                                <td>500</td>
                                <td>Repose is restarting, retry with exponential backoff. </td>
                            </tr>
                            <tr>
                                <td>503</td>
                                <td>Cloud Feeds internal error, retry with exponential backoff.</td>
                            </tr>
                        </tbody>
                    </table>
                   
                </para>
            <para>
                    <note>
                        <para> In the rare case that you experience a temporary error within Cloud
                            Feeds (usually a 500 or 503) retrying your action shortly after will
                            usually result in success.  In the case where this doesn't work,
                            retrying with successive longer and longer waits will prevent Cloud
                            Feeds (and your own system) from needless execution.  This is
                                called <link xlink:href="http://en.wikipedia.org/wiki/Exponential_backoff">Exponential backoff</link>.  </para>
                    </note>
                </para></section>
        <section xml:id="Bestpracticesforconsumers"><title>Best practices for consumers</title><para>The following list describes a number of best practices consumers can adhere to when reading a
                    feed.</para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>Walk the feed forward</para>
                            <para>When reading a feed you get the best performance if you start from
                                the last entry that was successfully read and then walk the feed
                                forward, towards the head of the feed. Use the following
                                format:</para>
                            <para>
                                <programlisting> https://&lt;endpoint&gt;/&lt;feed&gt;?marker=&lt;<replaceable>uuid_of_last_read_entry</replaceable>&gt;&amp;direction=forward&amp;limit=1000 </programlisting>
                            </para>
                            <para>as shown in the following example:</para>
                            <para>
                                <programlisting> https://atom.staging.ord1.us.ci.rackspace.net/functest1/events?marker=urn:uuid:d011681e-6941-4e78-a63c-ea798993b071&amp;direction=forward&amp;limit=1000 </programlisting>
                            </para>
                        </listitem>
                        <listitem>
                            <para>Read in batches of 1000 using the <parameter>limit</parameter>
                                query parameter</para>
                            <para>The fewer calls to Cloud Feeds, the less processing has to be
                                done.  Cloud Feeds allows you to read up to 1000 entries at a time
                                using the limit query parameter. Use the following format (along
                                with the recommended direction parameter): </para>
                            <para>
                                <programlisting> https://&lt;endpoint&gt;/&lt;feed&gt;?marker=&lt;<replaceable>uuid_of_last_read_entry</replaceable>&gt;&amp;direction=forward&amp;limit=1000 </programlisting>
                            </para>
                            <para>as shown in the following example:</para>
                            <para>
                                <programlisting> https://atom.staging.ord1.us.ci.rackspace.net/functest1/events?marker=urn:uuid:d011681e-6941-4e78-a63c-ea798993b071&amp;direction=forward&amp;limit=1000 </programlisting>
                            </para>
                        </listitem>
                        <listitem>
                            <para>Use compression when issuing requests to remote data
                                centers</para>
                            <para>Having Cloud Feeds compress its message body can decrease response
                                time, especially when you interact with an endpoint in a remote data
                                center. By adding the following header to your request, you are
                                instructing Cloud Feeds to compress the output. Your HTTP client
                                uncompresses the output before you read the message body.</para>
                            <para>
                                <programlisting> Accept-Encoding: gzip, deflate </programlisting>
                            </para>
                        </listitem>
                        <listitem>
                            <para>Use high-performance categories when using the
                                    <parameter>search</parameter> query parameter.</para>
                            <para>The following table shows the most common category types:</para>
                            <para>
                                <table frame="border">
                                    <caption>Category prefixes</caption>
                                    <col width="15%"/>
                                    <col width="43%"/>
                                    <col width="383pt"/>
                                    <thead>
                                        <tr>
                                            <th>Category prefix</th>
                                            <th>Description</th>
                                            <th>Example</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><code>tid:</code></td>
                                            <td>Specifies the tenant ID, taken from the
                                                  <parameter>tenantid</parameter> attribute from the
                                                event node.</td>
                                            <td><code>tid:12882</code></td>
                                        </tr>
                                        <tr>
                                            <td><code>type:</code></td>
                                            <td>Specifies the event type.</td>
                                            <td><code>type:cloudsites.metered.site.usage</code>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><code>rgn:</code></td>
                                            <td>Specifies the region.</td>
                                            <td><code>rgn:ORD</code>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><code>dc:</code></td>
                                            <td>Specifies the data center.</td>
                                            <td><code>dc:ORD1</code></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </para>
                            <note>
                                <para>The <code>type:</code>  category is a new representation of
                                    the event type.  The old-style category does not have prefix (an
                                    example of this format
                                        is <code>cloudsites.metered.site.usage</code>), and does not
                                    perform as well for searches.</para>
                            </note>
                        </listitem>
                    </itemizedlist>
                </para></section>
        </section>
    </chapter>    
    <xi:include href="feeds-archiving.xml" security="internal"></xi:include>
    <xi:include href="api-operations-external.xml"></xi:include>
    <xi:include href="api-operations-internal.xml"></xi:include>

    </book>
