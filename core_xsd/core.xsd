<?xml version="1.0" encoding="UTF-8"?>

<schema
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    xmlns="http://www.w3.org/2001/XMLSchema"
    xmlns:event="http://docs.rackspace.com/core/event"
    xmlns:xerces="http://xerces.apache.org"
    xmlns:saxon="http://saxon.sf.net/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    targetNamespace="http://docs.rackspace.com/core/event">

    <complexType name="EventBase" abstract="true">
        <annotation>
            <documentation>
                <html:p>
                    This is the base type for all event records.  The
                    only thing that is required is a version
                    attribute.
                </html:p>
            </documentation>
        </annotation>
        <attribute name="version" type="event:NonEmptyString" use="required">
            <annotation>
                <documentation>
                    <html:p>
                        Event record version.
                    </html:p>
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <complexType name="EventV1">
        <annotation>
            <documentation>
                <html:p>
                    Event information version 1.
                </html:p>
            </documentation>
        </annotation>
        <complexContent>
            <extension base="event:EventBase">
                <sequence>
                    <any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="tenantId" type="event:NonEmptyString" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the tenant ID.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="parentTenantId" type="event:NonEmptyString" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the parent tenant ID.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="clientUsername" type="event:Username" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                The sub-account's user name, when applicable.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="agentUsername" type="event:Username" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                The rackspace agent who is taking action on account of the user.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="resourceId" type="event:NonEmptyString" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies an instance of the product.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="resourceURI" type="xsd:anyURI" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                A URI that uniquely identitfies the resource.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="id" type="event:UUID" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                Specifies the unique UUID for the event record. This value should be UUID Version 1, 2, or 4. For more information, see http://en.wikipedia.org/wiki/Universally_unique_identifier.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="referenceId" type="event:UUID" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                A GUID identifying the event record,
                                that this record is updating. This is
                                optional, and this should be used if
                                this event is correcting another
                                event.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="rootAction" type="event:NonEmptyString" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the action that caused the
                                event.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="type" type="event:EventType" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the type of event.  If one
                                of the existing event types don't feed
                                set this type to EXTENDED and add an
                                eventType attribute to your product
                                schema.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="severity" type="event:Severity" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the severity of the event.
                                Valid values are INFO, WARNING,
                                CRITICAL. This is only valid for
                                system events, not usage events.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="environment" type="event:ENVIRONMENT"
                           use="optional" default="PROD">
                    <annotation>
                        <documentation>
                            <html:p>
                                The environment where the message
                                originated from.  The optional is
                                optional, if it is not specified PROD
                                will be assumed.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="dataCenter" type="event:DC" use="optional" default="GLOBAL">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the datacenter of the
                                event, for example, DFW3.  The
                                attribute is optional, if it is not
                                specified GLOBAL will be assumed.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="region" type="event:Region" use="optional" default="GLOBAL">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the region, for example,
                                DFW.  The attribute is optional, if it
                                is not specified GLOBAL will be
                                assumed.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="startTime" type="event:UTCDateTime" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                UTC, ISO Format start time. startTime is
                                inclusive (i.e. the event occurred starting
                                at the startTime, not after).
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="endTime" type="event:UTCDateTime" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                UTC, ISO Format end time.  For an EXISTs
                                event, the startTime and endTime reflect the
                                event duriation for the resource instance.
                                endTime is exclusive (i.e. the event occurred
                                up to, but not during the endTime).
                                endTime must come after startTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="eventTime" type="event:UTCDateTime" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                UTC, ISO Format event time. The time
                                when an event occured. Use instead of
                                startTime and endTime in cases where
                                the event does not have a range.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="resourceName" type="event:NonEmptyString" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Customer defined name for the resource.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="duration" type="xsd:duration" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                               Usage duration of the resource associated with this event. This is
                               primarily used for event with type=USAGE_SUMMARY.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="rackspaceAccountNumber" type="event:NonEmptyString" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Usage account number of the resource associated with this event. This is
                                primarily used for event with type=USAGE_SUMMARY.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <assert vc:minVersion="1.1" test="if (*:product/@resourceType) then @resourceId else true()"
                        xerces:message="If a resource type is specified then so should a resourceId"
                        saxon:message="If a resource type is specified then so should a resourceId"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                If a resource type is specified then
                                so should a resourceId.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type =  ('USAGE', 'USAGE_SNAPSHOT','USAGE_SUMMARY')) then @tenantId else true()"
                        xerces:message="Usage messages must contain a tenantId"
                        saxon:message="Usage messages must contain a tenantId"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                A usage message must always contain a tenant id.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type =  ('USAGE', 'USAGE_SNAPSHOT','USAGE_SUMMARY')) then not(@severity) else true()"
                        xerces:message="A usage message may not contain a severity"
                        saxon:message="A usage message may not contain a severity"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                A usage message may not contain a severity
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="*:product/@serviceCode"
                        xerces:message="The product element is missing the serviceCode attribute."
                        saxon:message="The product element is missing the serviceCode attribute.">
                    <annotation>
                        <documentation>
                            <html:p>
                                Each product schema must define a
                                service code attribute that uniquely
                                identifies the product.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (exists(*:product/@summary)) then @type='USAGE_SUMMARY' else true()"
                        xerces:message="The product element claims to contain usage summary information, but the type of event is not USAGE_SUMMARY."
                        saxon:message="The product element claims to contain usage summary information, but the type of event is not USAGE_SUMMARY.">
                    <annotation>
                        <documentation>
                            <html:p>
                                A product element that contains usage
                                summary information should be enclosed
                                in an event of type USAGE_SUMMARY.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (not(exists(*:product/@summary))) then not(@type='USAGE_SUMMARY') else true()"
                        xerces:message="The product element claims does not contain usage summary information, but the type of event is USAGE_SUMMARY."
                        saxon:message="The product element claims does not contain usage summary information, but the type of event is USAGE_SUMMARY.">
                    <annotation>
                        <documentation>
                            <html:p>
                                A product element that does not
                                contain usage summary information
                                should not be enclosed in an event of
                                type USAGE_SUMMARY.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type eq 'EXTENDED') then *:product/@eventType else true()"
                        xerces:message="The event type is set to EXTENDED, but couldn't find eventType attribute in the product data."
                        saxon:message="The event type is set to EXTENDED, but couldn't find eventType attribute in the product date.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'EXTENDED'
                                then the product attributes should
                                contain an eventType element, which
                                will contain the actual EventType.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type eq 'USAGE') then @startTime else true()"
                        xerces:message="Usage events must have a startTime."
                        saxon:message="Usage events must have a startTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'USAGE'
                                then the event should have a start time.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type eq 'USAGE' and @endTime and @startTime) then xsd:dateTime(@endTime) le (xsd:dateTime(@startTime) + xsd:dayTimeDuration('P1D')) else true()"
                        xerces:message="Usage events must not span more than 1 Day."
                        saxon:message="Usage events must not span more than 1 Day.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'USAGE'
                                then the event should not span more than 1 Day.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type eq 'USAGE' and xsd:integer(@version) ge 2) then xsd:date(@endTime) eq xsd:date(@startTime) or starts-with(string(xsd:time(@endTime)), '00:00:00') else true()"
                        xerces:message="Usage events must not span beyond midnight."
                        saxon:message="Usage events must not span beyond midnight.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'USAGE' and event is version 2
                                then the event should not span beyond midnight
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type eq 'USAGE_SNAPSHOT') then @eventTime else true()"
                        xerces:message="Usage snapshots must set eventTime attribute."
                        saxon:message="Usage snapshots must set eventTime attribute.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'USAGE_SNAPSHOT'
                                then the eventTime attribute must be set.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (not(@eventTime) and not(@startTime) and not(@endTime)) then false() else true()"
                        xerces:message="The event must have a startTime and endTime or it must have an eventTime."
                        saxon:message="The event must have a startTime and endTime or it must have an eventTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                The event must have a start time and
                                end time or it must have an eventTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@eventTime) then (not(@startTime) and not(@endTime)) else true()"
                        xerces:message="If the event has an eventTime then it cannot have a startTime or an endTime."
                        saxon:message="If the event has an eventTime then it cannot have a startTime or an endTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the event has an eventTime then it
                                must not have a startTime or an
                                endTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@startTime) then (not(@eventTime) and @endTime) else true()"
                        xerces:message="If the event has a startTime then it cannot have an eventTime and it must have an endTime."
                        saxon:message="If the event has a startTime then it cannot have an eventTime and it must have an endTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the event has a startTime then it
                                must not have an eventTime and it must
                                have an endTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@endTime) then (not(@eventTime) and @startTime) else true()"
                        xerces:message="If the event has a endTime then it cannot have an eventTime and it must have a startTime."
                        saxon:message="If the event has a endTime then it cannot have an eventTime and it must have a startTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the event has a endTime then it
                                must not have an eventTime and it must
                                have a startTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@startTime and @endTime) then xsd:dateTime(@startTime) lt xsd:dateTime(@endTime) else true()"
                        xerces:message="The startTime should come before the endTime."
                        saxon:message="The startTime should come before the endTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                The startTime should always come before the endTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@endTime) then xsd:dateTime(@endTime) le (current-dateTime() + xsd:dayTimeDuration('PT10M')) else true()"
                        xerces:message="The endTime of an event must not be more than 10 mins in the future."
                        saxon:message="The endTime of an event must not be more than 10 mins in the future.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If there is an endTime, then the
                                endTime must not be more than 10 mins
                                in the future.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@eventTime) then xsd:dateTime(@eventTime) le (current-dateTime() + xsd:dayTimeDuration('PT10M')) else true()"
                        xerces:message="The eventTime of an event must not be more than 10 mins in the future."
                        saxon:message="The eventTime of an event must not be more than 10 mins in the future.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If there is an eventTime, then the
                                eventTime must not be more than 10
                                mins in the future.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <!--
                    For USAGE, USAGE_SNAPSHOT & USAGE_SUMMARY events, datacenter & region must exist and must match.
                    For all other event types, datacenter & region are optional, and datacenter must match region if it is a non-GLOBAL value.
                -->
                <assert vc:minVersion="1.1" test="if (@dataCenter = ('DFW1','DFW2','DFW3')) then (@region = 'DFW') else
                                                  if (@dataCenter = 'FRA1') then (@region = 'FRA') else
                                                  if (@dataCenter = 'HKG1') then (@region = 'HKG') else
                                                  if (@dataCenter = ('IAD1','IAD2','IAD3')) then (@region = 'IAD') else
                                                  if (@dataCenter = ('LON1','LON3','LON5')) then (@region = 'LON') else
                                                  if (@dataCenter = 'ORD1') then (@region = 'ORD') else
                                                  if (@dataCenter = 'SYD2') then (@region = 'SYD') else
                                                  if (@dataCenter = ('AWS-US-EAST-1','AWS-US-WEST-1','AWS-US-WEST-2')) then (@region = 'AWS-US') else
                                                  if (@dataCenter = ('AWS-EU-WEST-1','AWS-EU-CENTRAL-1')) then (@region = 'AWS-EU') else
                                                  if (@dataCenter = ('AWS-AP-SOUTHEAST-1','AWS-AP-NORTHEAST-1')) then (@region = 'AWS-AP') else
                                                  if (@dataCenter = 'AWS-AP-SOUTHEAST-2') then (@region = 'AWS-AU') else
                                                  if (@dataCenter = 'AWS-SA-EAST-1') then (@region = 'AWS-SA') else
                                                  if (@type = ('USAGE','USAGE_SUMMARY','USAGE_SNAPSHOT')) then ((@dataCenter = 'GLOBAL') and (@region = 'GLOBAL'))
                                                  else true()
                                                  "
                        xerces:message="There is a mismatch between the region and the dataCenter."
                        saxon:message="There is a mismatch between the region and the dataCenter.">
                    <annotation>
                        <documentation>
                            <html:p>
                                The datacenter must match the region, and datacenter must exists for event type USAGE, USAGE_SUMMARY, and USAGE_SNAPSHOT.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type = 'USAGE_SUMMARY') then @duration else true()"
                        xerces:message="If this event is of type USAGE_SUMMARY, then it should have duration attribute"
                        saxon:message="If this event is of type USAGE_SUMMARY, then it should have duration attribute"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                If this event is of type USAGE_SUMMARY, then it should have a duration attribute.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type != 'USAGE_SUMMARY') then not(exists(@duration)) else true()"
                        xerces:message="If this event is not of type USAGE_SUMMARY, then it should not have duration attribute"
                        saxon:message="If this event is not of type USAGE_SUMMARY, then it should not have duration attribute"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                If this event is not of type USAGE_SUMMARY, then it should not have a duration attribute.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type = 'USAGE_SUMMARY') then @rackspaceAccountNumber else true()"
                        xerces:message="If this event is of type USAGE_SUMMARY, then it should have rackspaceAccountNumber attribute"
                        saxon:message="If this event is of type USAGE_SUMMARY, then it should have rackspaceAccountNumber attribute"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                If this event is of type USAGE_SUMMARY, then it should have a rackspaceAccountNumber attribute.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type != 'USAGE_SUMMARY') then not(exists(@rackspaceAccountNumber)) else true()"
                        xerces:message="If this event is not of type USAGE_SUMMARY, then it should not have rackspaceAccountNumber attribute"
                        saxon:message="If this event is not of type USAGE_SUMMARY, then it should not have rackspaceAccountNumber attribute"
                        >
                    <annotation>
                        <documentation>
                            <html:p>
                                If this event is not of type USAGE_SUMMARY, then it should not have an rackspaceAccountNumber attribute.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
            </extension>
        </complexContent>
    </complexType>

    <simpleType name="UUID">
        <annotation>
            <documentation>
                <html:p>
                    A universally unique identifier.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <length value="36" fixed="true"/>
            <pattern value="[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"/>
        </restriction>
    </simpleType>

    <simpleType name="UTCDateTime">
        <annotation>
            <documentation>
                <html:p>
                    A datetime in which the timezone is explicitly
                    required and must be +00:00 or Z.
                </html:p>
                <html:p>
                    <html:strong>
                        Only an XSD 1.1 validator will enforce this restriction.
                    </html:strong>
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:dateTime" vc:minVersion="1.0" vc:maxVersion="1.1"/>
        <restriction base="xsd:dateTimeStamp" vc:minVersion="1.1">
            <assertion
                test="ends-with(string($value),'Z') or ends-with(string($value),'+00:00') or ends-with(string($value),'-00:00')"
                xerces:message="The dateTime should be in the UTC timezone, it is expect to end in +00:00 or Z."
                saxon:message="The dateTime should be in the UTC timezone, it is expect to end in +00:00 or Z."/>
        </restriction>
    </simpleType>

    <simpleType name="Severity">
        <annotation>
            <documentation>
                <html:p>
                    The severity of the envent.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <enumeration value="INFO"/>
            <enumeration value="WARNING"/>
            <enumeration value="CRITICAL"/>
        </restriction>
    </simpleType>

    <simpleType name="EventType">
        <annotation>
            <documentation>
                <html:p>
                    The type of event.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <enumeration value="CREATE"/>
            <enumeration value="USAGE"/>
            <enumeration value="USAGE_SNAPSHOT"/>
            <enumeration value="USAGE_SUMMARY"/>
            <enumeration value="UPDATE"/>
            <enumeration value="DELETE"/>
            <enumeration value="SUSPEND"/>
            <enumeration value="UNSUSPEND"/>
            <enumeration value="UP"/>
            <enumeration value="DOWN"/>
            <enumeration value="INFO"/>
            <enumeration value="EXTENDED"/>
            <enumeration value="ERROR"/>
        </restriction>
    </simpleType>

    <simpleType name="Username">
        <annotation>

        </annotation>
        <restriction base="xsd:string">
            <minLength value="1"/>
            <maxLength value="255"/>
            <!--
              - must start with a letter
              - can contain letters, digits, -, _ & @
              -->
            <pattern value="[a-zA-Z][a-zA-Z0-9.\-_@]*"/>
        </restriction>
    </simpleType>
    <simpleType name="NonEmptyString">
        <annotation>
            <documentation>
                <html:p>
                    Any non-empty string.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <whiteSpace value="collapse"/>
            <minLength value="1"/>
            <maxLength value="255"/>
        </restriction>
    </simpleType>

    <simpleType name="Region">
        <annotation>
            <documentation>
                <html:p>
                    The region in which the event is
                    located. GLOBAL implies that the resoure is
                    regionless.
                </html:p>
                <html:p>
                    Note that the source of truth for this is in the
                    <html:a
                    href="https://dcwiki.rackspace.com/wiki/Main_Page">DC
                    Portal</html:a>.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <enumeration value="GLOBAL"/>
            <enumeration value="DFW"/>
            <enumeration value="FRA"/>
            <enumeration value="HKG"/>
            <enumeration value="IAD"/>
            <enumeration value="LON"/>
            <enumeration value="ORD"/>
            <enumeration value="SYD"/>
            <enumeration value="AWS-US"/>
            <enumeration value="AWS-EU"/>
            <enumeration value="AWS-AP"/>
            <enumeration value="AWS-AU"/>
            <enumeration value="AWS-SA"/>
        </restriction>
    </simpleType>

    <simpleType name="DC">
        <annotation>
            <documentation>
                <html:p>
                    The datacenter in which the event is
                    located. GLOBAL implies that the resoure is
                    regionless.
                </html:p>
                <html:p>
                    Note that the source of truth for this is in the
                    <html:a
                    href="https://dcwiki.rackspace.com/wiki/Main_Page">DC
                    Portal</html:a>.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <enumeration value="GLOBAL"/>
            <enumeration value="DFW1"/>
            <enumeration value="DFW2"/>
            <enumeration value="DFW3"/>
            <enumeration value="FRA1"/>
            <enumeration value="HKG1"/>
            <enumeration value="IAD1"/>
            <enumeration value="IAD2"/>
            <enumeration value="IAD3"/>
            <enumeration value="LON1"/>
            <enumeration value="LON3"/>
            <enumeration value="LON5"/>
            <enumeration value="ORD1"/>
            <enumeration value="SYD2"/>
            <enumeration value="AWS-US-EAST-1"/>
            <enumeration value="AWS-US-WEST-1"/>
            <enumeration value="AWS-US-WEST-2"/>
            <enumeration value="AWS-EU-WEST-1"/>
            <enumeration value="AWS-EU-CENTRAL-1"/>
            <enumeration value="AWS-AP-SOUTHEAST-1"/>
            <enumeration value="AWS-AP-NORTHEAST-1"/>
            <enumeration value="AWS-AP-SOUTHEAST-2"/>
            <enumeration value="AWS-SA-EAST-1"/>
        </restriction>
    </simpleType>

    <simpleType name="ENVIRONMENT">
        <annotation>
            <documentation>
                <html:p>
                    The environment where the message originated.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <enumeration value="PROD"/>
            <enumeration value="PREPROD"/>
            <enumeration value="STAGE"/>
            <enumeration value="QA"/>
            <enumeration value="DEV"/>
            <enumeration value="UAT"/>
            <enumeration value="LOCAL"/>
        </restriction>
    </simpleType>
</schema>
